{"version":3,"sources":["logged_in/components/dashboard/PatientInfo.js","icons/icons.js","logged_in/components/dashboard/MultiColorProgressBar.js","logged_in/components/dashboard/Summary.js","logged_in/components/dashboard/RiskCategory.js","logged_in/components/dashboard/Vitals.js","api/Api.js","logged_in/components/dashboard/Patient.js","logged_in/components/dashboard/Dashboard.js","shared/components/PropsRoute.js","logged_in/components/Routing.js","logged_in/components/navigation/NavBar.js","logged_in/components/Main.js"],"names":["PatientInfo","props","onAgeChange","bind","event","age","Number","target","value","this","onPatientAgeChange","onPatientGenderChange","isIsraeliIdValid","patient","id","recommendation","contributing_factors","toPrecision","information","color","theme","palette","common","grey","classes","Icon","icon","Grid","container","spacing","alignItems","item","md","ListItem","style","getColor","Box","m","fontWeight","TextField","type","className","idInput","error","isIDValid","label","variant","onChange","onIDChange","helperText","ageInput","Boolean","getAgeContributionFactor","RadioGroup","aria-label","gender","display","onGenderChange","width","FormControlLabel","control","Radio","size","visibility","Checkbox","checked","otherConsiderations","pregnent_healthy","name","Component","withStyles","marginRight","withTheme","HotelIcon","SvgIcon","d","RobotIcon","MultiColorProgressBar","parent","values","readings","length","map","i","percent","key","calibrations","bars","getProgressData","riskScores","makeNice","a","toFixed","replace","results","Dashboard","SCORE_CATEGORIES","find","config","text","push","emptyPercentage","r","reduce","b","section1","margin","section2","section3","chips","paddingTop","divider","height","xs","direction","alignContent","justify","Typography","gutterBottom","Chip","mr","Divider","light","root","Button","startIcon","fontSize","onClick","html2canvas","document","querySelector","then","canvas","createElement","href","toDataURL","download","click","onClearAll","RiskCategory","items","selected","categoryName","chipWrapper","Object","keys","detail","isSelected","isContribution","contribution","backgroundColor","fade","onSelectionChange","justifyContent","flexWrap","Vitals","clinicalStatus","onClinicalStatusChange","disableGutters","vital","e","vitalChange","input","unit","Api","Auth","currentSession","getIdToken","getJwtToken","body","toServerModel","API","Endpoints","stagingAuth","getHeaders","headers","post","patient_id","getUuid","Patient","coronaPositive","medicalPreconditions","copd","htn","dm","smoker","cad","chf","ckd","hd","cld","dementia","cancer","aids","temperature","pulse","respiratory_rate","auscultation","mental_status","oxygen_saturation","treatment","psychiatric_treatment","anti_inflamatory_regular_treatment","growth_hormone_children","immuno_depressant_drugs","mobility_problem","potential_for_home_quarentine","youngs_with_asthma","_cloneDeep","patient_information","BoolToNum","corona_status","corona_positive","medical_preconditions","clinical_status","other_considerations","userInfo","NumToBool","object","returnObject","entries","initialState","medicalSelections","otherConsiderationsSelection","state","onMedicalItemChange","onHomeEnvItemChange","reset","setState","setSelections","category","categoryItem","updateRecommendation","selections","updateScores","forEach","categoryKeys","MEDICAL_PRECONDITIONS_CONFIG","categoryFactors","_pick","getUserInfo","toClientModel","assign","o","HOME_ENV_CONFIG","leftPanel","py","STATIC_RISK_CONFIG","categoryKey","VITALS_CONFIG","AccountCircleOutlinedIcon","FavoriteBorderOutlinedIcon","ListAltOutlinedIcon","HomeOutlinedIcon","concat","boxShadow","PropsRoute","component","rest","render","routeProps","finalProps","React","renderMergedProps","wrapper","breakpoints","up","marginLeft","memo","path","useStyles","makeStyles","flexGrow","appBar","white","leftSide","userName","textAlign","MenuAppBar","useState","anchorEl","setAnchorEl","username","setUserName","open","handleClose","currentAuthenticatedUser","user","catch","err","console","AppBar","position","Toolbar","orientation","flexItem","secondary","main","ml","ListItemText","primary","IconButton","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","signOut","data","log","Main","CardChart","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","transactions","statistics","views","profit","posts","targets","messages","isAccountActivated","addBalanceDialogOpen","classNames","PureComponent","transition","transitions","create","easing","sharp","duration","leavingScreen","down"],"mappings":"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","file":"static/js/4.92cd390e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, withStyles} from '@material-ui/core';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport isIsraeliIdValid from 'israeli-id-validator';\nimport theme from '../../../theme';\n\nconst styles = theme => ({\n  idInput: {\n    marginRight: theme.spacing(2)\n  },\n  ageInput: {\n    marginRight: theme.spacing(2),\n    width: 100\n  }\n});\n\nclass PatientInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.onAgeChange = this.onAgeChange.bind(this);\n  }\n\n  onAgeChange(event) {\n    let age = Number(event.target.value);\n    this.props.onPatientAgeChange(age);\n  }\n\n  onGenderChange(event) {\n    this.props.onPatientGenderChange(event.target.value);\n  }\n\n  isIDValid() {\n    return isIsraeliIdValid(this.props.patient.id);\n  }\n\n  getAgeContributionFactor() {\n    return (this.props.recommendation.contributing_factors && `+${this.props.recommendation.contributing_factors.age.toPrecision(2)}`) || ' '\n  }\n\n  getColor() {\n    return this.props.patient.information.age ? this.props.color : theme.palette.common.grey;\n  }\n\n  render() {\n  const { classes } = this.props;\n  const Icon = this.props.icon;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={2}>\n      <ListItem>\n        <Icon style={{ color: this.getColor() }}/>\n        <Box m={1} color=\"text.primary\" fontWeight={'bold'}>Patient</Box>\n      </ListItem>\n    </Grid>\n    <Grid item md={10}>\n      <Grid container alignItems={'center'}>\n          <TextField type={'number'} className={classes.idInput}\n                     error={!this.isIDValid()}\n                     label={'ID'}\n                     value={this.props.patient.id}\n                     variant=\"outlined\"\n                     onChange={this.props.onIDChange}\n                     color=\"secondary\"\n                     helperText={this.isIDValid() ? ' ' : 'Enter a valid ID'}>\n          </TextField>\n          <TextField type={'number'} className={classes.ageInput}\n                     label={'Age'}\n                     variant=\"outlined\"\n                     value={Boolean(this.props.patient.information.age) && this.props.patient.information.age}\n                     onChange={this.onAgeChange}\n                     color=\"secondary\"\n                     helperText={this.getAgeContributionFactor()}/>\n        <RadioGroup aria-label=\"gender\" value={this.props.patient.information.gender} style={{display: 'inline'}} onChange={this.onGenderChange.bind(this)}>\n          <Grid container style={{display: 'inline-flex', width: 185}}>\n            <Grid item md={6}>\n              <FormControlLabel value=\"female\" control={<Radio size={'small'} color={'secondary'}/>} label=\"Female\"/>\n            </Grid>\n            <Grid item md={6} >\n              <FormControlLabel value=\"male\" control={<Radio size={'small'} color={'secondary'}/>} label=\"Male\"/>\n            </Grid>\n            <Grid item md={12}>\n              <FormControlLabel\n                style={{visibility: this.props.patient.information.gender === 'female' ? 'visible' : 'hidden'}}\n                control={\n                  <Checkbox\n                    size={'small'}\n                    checked={this.props.patient.otherConsiderations.pregnent_healthy}\n                    onChange={() => {}}\n                    name=\"checkedB\"\n                    color=\"secondary\"\n                  />}\n                label=\"Pregnant\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              size={'small'}\n              checked={true}\n              onChange={() => {}}\n              name=\"checkedB\"\n              color=\"secondary\"\n            />}\n          label=\"COVID-19 Positive\"\n        />\n      </Grid>\n    </Grid>\n  </Grid>\n  };\n}\n\nPatientInfo.propTypes = {\n  icon: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  patient: PropTypes.object.isRequired,\n  recommendation: PropTypes.object.isRequired,\n  onPatientAgeChange: PropTypes.func.isRequired,\n  onPatientGenderChange: PropTypes.func.isRequired,\n  onIDChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(PatientInfo);\n","import SvgIcon from '@material-ui/core/SvgIcon';\nimport React from 'react';\n\nfunction HotelIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M2,22 L2,20 L5,20 L5,2 L19,2 L19,20 L22,20 L22,22 L2,22 Z M17,4 L7,4 L7,20 L10,20 L10,15 L14,15 L14,20 L17,20 L17,4 Z M11,11 L11,13 L8,13 L8,11 L11,11 Z M16,11 L16,13 L13,13 L13,11 L16,11 Z M11,8 L11,10 L8,10 L8,8 L11,8 Z M16,8 L16,10 L13,10 L13,8 L16,8 Z M11,5 L11,7 L8,7 L8,5 L11,5 Z M16,5 L16,7 L13,7 L13,5 L16,5 Z\"/>\n    </SvgIcon>\n  );\n}\n\nfunction LungsIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12,2 C12.5522847,2 13,2.44771525 13,3 L12.9997864,9.585 L14.0465505,10.6318682 C14.3073108,9.13371144 15.5282684,8 16.9951047,8 C19.9951047,8 21.9951047,14.4615385 21.9951047,17.6923077 C21.9951047,20.0713805 20.2042437,22 17.9951047,22 C15.8529093,22 14.1040258,20.1864955 14,17.907305 L14,13.414 L11.9997864,11.414 L9.994,13.418 L9.99510469,17.907305 C9.89432968,20.1152708 8.2498943,21.8862012 6.19964034,21.9947281 L6,22 C3.790861,22 2,20.0713805 2,17.6923077 C2,14.4615385 4,8 7,8 C8.46782012,8 9.68943157,9.13523269 9.94907756,10.6348831 L10.9997864,9.585 L11,3 C11,2.44771525 11.4477153,2 12,2 Z M16.9951047,10 C16.5332306,10 16.0958448,10.4146337 16.0101661,11.0166078 L16,11.118 L15.9979201,17.8161168 C16.0523834,19.0093995 16.8823096,19.9144576 17.855214,19.9942701 L17.9951047,20 C19.0652012,20 19.9951047,18.9985655 19.9951047,17.6923077 C19.9951047,14.5272955 18.0332767,10 16.9951047,10 Z M7,10 C5.96182804,10 4,14.5272955 4,17.6923077 C4,18.9417716 4.85080019,19.9123425 5.86128215,19.994378 L6,20 L6.13989069,19.9942701 C7.06414989,19.9184482 7.85937124,19.0978422 7.98327819,17.9928804 L7.9971846,17.8161168 L7.99510469,11.118 L7.98493856,11.0166078 C7.89925987,10.4146337 7.46187408,10 7,10 Z\"/>\n    </SvgIcon>\n  );\n}\n\nfunction PulseIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M3,13H5.79L10.1,4.79L11.28,13.75L14.5,9.66L17.83,13H21V15H17L14.67,12.67L9.92,18.73L8.94,11.31L7,15H3V13Z\" />\n    </SvgIcon>\n  );\n}\n\nfunction RobotIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12,2 C13.1045695,2 14,2.8954305 14,4 C14,4.7398375 13.5982846,5.38584934 13.0010775,5.73181186 L13,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20.0010775,11.2681881 C20.5982846,11.6141507 21,12.2601625 21,13 C21,13.7398375 20.5982846,14.3858493 20.0010775,14.7318119 L20,16 C20,17.1045695 19.1045695,18 18,18 L14,18 L14,20 L21,20 C21.5522847,20 22,20.4477153 22,21 C22,21.5522847 21.5522847,22 21,22 L3,22 C2.44771525,22 2,21.5522847 2,21 C2,20.4477153 2.44771525,20 3,20 L10,20 L10,18 L6,18 C4.8954305,18 4,17.1045695 4,16 L3.99992752,14.7323937 C3.40216612,14.3865739 3,13.7402524 3,13 C3,12.2597476 3.40216612,11.6134261 3.99992752,11.2676063 L4,10 C4,8.8954305 4.8954305,8 6,8 L11,8 L10.9999275,5.73239368 C10.4427094,5.41002921 10.0554537,4.82654371 10.0054857,4.14926234 L10,4 C10,2.8954305 10.8954305,2 12,2 Z M18,10 L6,10 L6,16 L18,16 L18,10 Z M10,12 L10,14 L8,14 L8,12 L10,12 Z M16,12 L16,14 L14,14 L14,12 L16,12 Z\"/>\n    </SvgIcon>\n  );\n}\n\n\nexport {HotelIcon, LungsIcon, PulseIcon, RobotIcon}","import {withStyles} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './MultiColorProgressBar.css';\n\nconst styles = theme => ({\n\n});\n\nclass MultiColorProgressBar extends Component {\n  render() {\n    const parent = this.props;\n\n    let values = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"value\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>{item.value}</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let calibrations = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"graduation\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>|</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let bars = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"bar\" style={{'backgroundColor': item.color, 'width': item.percent + '%'}}  key={i}>\n\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    return (\n      <div className=\"multicolor-bar\">\n        <div className=\"values\">\n          {values === ''?'':values}\n        </div>\n        <div className=\"scale\">\n          {calibrations === ''?'':calibrations}\n        </div>\n        <div className=\"bars\">\n          {bars === ''?'':bars}\n        </div>\n      </div>\n    );\n  }\n}\n\nMultiColorProgressBar.propTypes = {\n  readings: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(MultiColorProgressBar);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport Box from '@material-ui/core/Box';\nimport HomeIcon from '@material-ui/icons/Home';\nimport {RobotIcon, HotelIcon} from '../../../icons/icons';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\n\nimport Chip from '@material-ui/core/Chip';\nimport MultiColorProgressBar from './MultiColorProgressBar';\nimport Dashboard from './Dashboard';\nimport html2canvas from 'html2canvas';\n\nconst styles = theme => ({\n  section1: {\n    margin: theme.spacing(3),\n  },\n  section2: {\n    margin: theme.spacing(3)\n  },\n  section3: {\n    margin: theme.spacing(3),\n  },\n  chips: {\n    paddingTop: theme.spacing(1)\n  },\n  divider: {\n    height: 1\n  }\n});\n\nfunction getProgressData(riskScores) {\n  const MAX_VALUE = 20;\n  let makeNice = a => a.toFixed(1).replace(/[.,]00$/, \"\");\n  let toPrecent = (item) => makeNice(((item / MAX_VALUE) * 100));\n\n  let results = [];\n  for (let key in riskScores) {\n    let color = Dashboard.SCORE_CATEGORIES.find(config => config.text === key).color;\n    results.push({name: key, value: makeNice(riskScores[key]), percent: toPrecent(riskScores[key]), color});\n  }\n  let emptyPercentage = 100 - results.map(r => Number(r.percent)).reduce((a,b) => a + b, 0);\n  if (emptyPercentage) {\n    results.push({name: '', value: makeNice(emptyPercentage), percent: emptyPercentage, color: '#fff'});\n  }\n  return results;\n}\n\nfunction Summary(props) {\n  function screenshot() {\n    html2canvas(document.querySelector('.MuiGrid-root')).then(canvas => {\n      var a = document.createElement('a');\n      a.href = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n      a.download = `${props.patient.id}_decision_tool.png`;\n      a.click();\n    })\n  }\n  const { classes } = props;\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <MultiColorProgressBar readings={getProgressData(props.riskScores)}/>\n          </Grid>\n          {/*<Grid item>*/}\n          {/*  <OutlinedInput value={props.totalRiskScore.toPrecision(3)}></OutlinedInput>*/}\n          {/*</Grid>*/}\n        </Grid>\n      </div>\n      <Grid container direction={'column'} alignContent={'center'}>\n        <Grid item className={classes.section2} container={true} justify={'center'}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n            <Typography gutterBottom>\n              Recommendation\n            </Typography>\n\n            {(() => {\n              switch (props.recommendation.recommendation) {\n                case 'home':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>;\n                case 'hotel':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>;\n                case 'hospital':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>;\n                default:\n                  return ''\n              }\n            })()}\n          </Grid>\n        </Grid>\n        <Grid item className={classes.section3}>\n          <Grid container direction={'column'} alignContent={'center'}>\n            <Grid item container={true} justify={'center'}>\n              <Box mr={1}><RobotIcon></RobotIcon></Box>\n              <Typography variant=\"h6\">What is your decision?</Typography>\n            </Grid>\n            <Grid item container={true} justify={'center'}>\n              <Typography variant={'body2'}>Human input will improve the algorithm</Typography>\n            </Grid>\n            <Grid item container={true} justify={'space-evenly'} className={classes.chips}>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider light classes={{root: classes.divider}}/>\n      <Grid container justify={'space-around'}>\n        <Grid item>\n          <Button startIcon={<SaveAltIcon fontSize=\"small\" />} color=\"secondary\" onClick={screenshot}>Save</Button>\n        </Grid>\n        <Grid item>\n          <Button startIcon={<CloseIcon fontSize=\"small\" />} color=\"secondary\" onClick={props.onClearAll}>Clear all</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nSummary.propTypes = {\n  patient: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  riskScores: PropTypes.object.isRequired,\n  recommendation: PropTypes.object.isRequired,\n  onClearAll: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Summary);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, withStyles} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport theme from '../../../theme';\n\nconst styles = theme => ({\n  chipWrapper: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    }\n  }\n});\n\nclass RiskCategory extends Component {\n  getColor() {\n    return this.props.items.find(a => a.selected) ? this.props.color : theme.palette.common.grey;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const Icon = this.props.icon;\n    return <Grid container spacing={2} alignItems={'center'}>\n      <Grid item md={2}>\n        <ListItem>\n          <Icon style={{ color: this.getColor() }}/>\n          <Box m={1} color=\"text.primary\" fontWeight={'bold'}>{this.props.categoryName}</Box>\n        </ListItem>\n      </Grid>\n      <Grid item md={10} className={classes.chipWrapper}>\n          {this.props.items && Object.keys(this.props.items).map((detail, id) => {\n            let isSelected = this.props.items[detail].selected;\n            let isContribution = Boolean(this.props.items[detail].contribution);\n            let color = isSelected ? this.props.color : theme.palette.grey[600];\n            let label = `${this.props.items[detail].text} ${isContribution ? '+'+this.props.items[detail].contribution: ''}`;\n            return <Box key={id} fontWeight={isSelected ? 'bold' : 'normal'}><Chip\n                         style={{backgroundColor: fade(color, 0.2), color}}\n                         label={label}\n                         onClick={this.props.onSelectionChange.bind(null, this.props.categoryName, this.props.items[detail].key)}/>\n            </Box>;\n          })}\n      </Grid>\n    </Grid>\n  };\n}\n\nRiskCategory.propTypes = {\n  categoryName: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.object.isRequired\n  ]),\n  color: PropTypes.string.isRequired,\n  onSelectionChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(RiskCategory);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport theme from '../../../theme';\n\nconst styles = theme => ({\n  input: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nclass Vitals extends Component {\n\n  getColor() {\n    return Object.values(this.props.patient.clinicalStatus).reduce((a,b) => a+b, 0) ? this.props.color : theme.palette.common.grey;\n  }\n\n  vitalChange(event, key) {\n    this.props.onClinicalStatusChange(key, Number(event.target.value));\n  }\n\n  render() {\n  const { classes } = this.props;\n    const Icon = this.props.icon;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={2}>\n      <ListItem>\n        <Icon style={{ color: this.getColor() }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Vitals\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={10}>\n      <ListItem disableGutters>\n        {this.props.items.map(vital =>\n          <TextField\n            value={Boolean(this.props.patient.clinicalStatus[vital.key]) && this.props.patient.clinicalStatus[vital.key]}\n            onChange={(e) => this.vitalChange(e, vital.key)}\n            key={vital.key}\n            type={'number'}\n            className={classes.input}\n            label={vital.text}\n            helperText={vital.unit}\n            variant=\"outlined\"\n            color=\"secondary\"/>\n        )}\n      </ListItem>\n    </Grid>\n  </Grid>\n  };\n}\n\nVitals.propTypes = {\n  icon: PropTypes.func.isRequired,\n  color: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  patient: PropTypes.object.isRequired,\n  onClinicalStatusChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Vitals);\n","import getUuid from 'uuid-by-string';\nimport {Auth, API} from 'aws-amplify';\nimport {Endpoints} from '../aws-exports';\n\nclass Api {\n  async getHeaders() {\n    return {'Authorization': `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}`}\n  }\n\n  async updateRecommendation(patient) {\n    let body = patient.toServerModel();\n    return API.post(Endpoints.stagingAuth, '/getPatientModelRecommendation', {body, headers: await this.getHeaders()}).then(a => a.recommendation);\n  }\n\n  async getUserInfo(id) {\n    let body = {patient_id: getUuid(id)};\n    return API.post(Endpoints.stagingAuth, '/getRecordsByPatient', {body, headers: await this.getHeaders()}).then(a => Object.values(a || {})[0]);\n  }\n}\n\nexport {Api};","import _cloneDeep from 'lodash/cloneDeep';\nimport getUuid from 'uuid-by-string';\n\nclass Patient {\n  constructor() {\n    this.id = '';\n    this.information = {\n      age: 0,\n      gender: ''\n    };\n    this.coronaPositive = false;\n    this.medicalPreconditions = {\n      copd: false,\n      htn: false,\n      dm: false,\n      smoker: false,\n      cad: false,\n      chf: false,\n      ckd: false,\n      hd: false,\n      cld: false,\n      dementia: false,\n      cancer: false,\n      aids: false\n    };\n    this.clinicalStatus = {\n      temperature: 0,\n      pulse: 0,\n      respiratory_rate: 0,\n      auscultation: 0,\n      mental_status: 0,\n      oxygen_saturation: 0\n    };\n\n    this.treatment = {\n      psychiatric_treatment: false,\n      anti_inflamatory_regular_treatment: false,\n      growth_hormone_children: false,\n      immuno_depressant_drugs: false\n    };\n\n    this.otherConsiderations = {\n      mobility_problem: false,\n      potential_for_home_quarentine: false,\n      pregnent_healthy: false,\n      youngs_with_asthma: false\n    }\n  }\n\n  toServerModel() {\n    let patient = _cloneDeep(this);\n    return {\n      patient_id: getUuid(patient.id),\n      patient_information: this.BoolToNum(patient.information),\n      corona_status: {\n        corona_positive: patient.coronaPositive\n      },\n      medical_preconditions: this.BoolToNum(patient.medicalPreconditions),\n      clinical_status: this.BoolToNum(patient.clinicalStatus),\n      treatment: this.BoolToNum(patient.treatment),\n      other_considerations: this.BoolToNum(patient.otherConsiderations)\n    };\n  }\n\n  toClientModel(id, userInfo) {\n    let patient = new Patient();\n    patient.id = id;\n    patient.information = userInfo.patient_information;\n    patient.medicalPreconditions = this.NumToBool(userInfo.medical_preconditions);\n    patient.clinicalStatus = userInfo.clinical_status;\n    patient.coronaPositive = userInfo.corona_status.corona_positive;\n    patient.treatment = this.NumToBool(userInfo.treatment);\n    patient.otherConsiderations = this.NumToBool(userInfo.other_considerations);\n    return patient;\n  }\n\n  BoolToNum(object) {\n    const returnObject = {};\n    for (const [key, value] of Object.entries(object)) {\n      returnObject[key] = typeof value === 'boolean' ? Number(value) : value;\n    }\n    return returnObject\n  }\n\n  NumToBool(object) {\n    const returnObject = {}\n    for (const [key, value] of Object.entries(object)) {\n      returnObject[key] = typeof value === 'number' ? Boolean(value) : value;\n    }\n    return returnObject\n  }\n\n}\n\nexport {Patient};","import React, {Component} from 'react';\nimport PatientInfo from \"./PatientInfo\";\nimport {Grid, withStyles} from '@material-ui/core';\nimport Summary from './Summary';\nimport RiskCategory from './RiskCategory';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Vitals from './Vitals';\nimport _pick from 'lodash/pick';\nimport {Api} from '../../../api/Api';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport {Patient} from './Patient';\nimport {LungsIcon, PulseIcon} from '../../../icons/icons';\nimport isIsraeliIdValid from 'israeli-id-validator';\n\nconst styles = theme => ({\n  leftPanel: {\n    boxShadow: `2px 0px 0px rgba(0, 0, 0, 0.12);`\n  },\n  divider: {\n    height: 1\n  }\n});\n\nconst categoryPadding = 2;\nconst initialState = {\n  patient: new Patient(),\n  medicalSelections: {},\n  otherConsiderationsSelection: {},\n  riskScores: {},\n  recommendation: {}\n};\n\nclass Dashboard extends Component {\n  static STATIC_RISK_CONFIG = {\n    text: \"Patient\",\n    key: \"Patient\",\n    color: \"#8716E0\",\n    icon: AccountCircleOutlinedIcon\n  };\n\n  static MEDICAL_PRECONDITIONS_CONFIG = [\n    {\n      text: \"Pulmonary\",\n      color: \"#00B0BB\",\n      icon: LungsIcon,\n      items: [\n        {\n          key: 'copd',\n          text: 'COPD',\n        },\n        {\n          key: 'smoker',\n          text: 'Smoker',\n        }\n      ]\n    },\n    {\n      text: \"Cardiovalcular\",\n      color: \"#E01683\",\n      icon: FavoriteBorderOutlinedIcon,\n      items: [\n        {\n          key: 'htn',\n          text: 'Hypertension',\n        },\n        {\n          key: 'hd',\n          text: 'Ischemic Heart Disease',\n        },\n        {\n          key: 'chf',\n          text: 'Heart Failure'\n        }\n      ]\n    },\n    {\n      text: \"Other Conditions\",\n      color: \"#F08627\",\n      icon: ListAltOutlinedIcon,\n      items: [\n        {\n          key: 'dm',\n          text: 'Diabetes Mellitus',\n        },\n        {\n          key: 'aids',\n          text: 'HIV / AIDS',\n        },\n        {\n          key: 'dementia',\n          text: 'Dementia'\n        },\n        {\n          key: 'cld',\n          text: 'Cirrhosis / Chronic Liver Disease'\n        },\n        {\n          key: 'ckd',\n          text: 'Chronic Kidney Disease'\n        },\n        {\n          key: 'cancer',\n          text: 'Malignancy'\n        }\n      ]\n    }\n  ];\n\n  static HOME_ENV_CONFIG = {\n    text: \"Home Environment\",\n    color: \"#06B30D\",\n    icon: HomeOutlinedIcon,\n    items: [\n      {\n        key: 'mobility_problem',\n        text: 'Immobile',\n      },\n      {\n        key: 'potential_for_home_quarentine',\n        text: 'Home quarantine is possible',\n      },\n      {\n        key: 'todo missing',\n        text: 'A member of the same household is in a risk group'\n      }\n    ]\n  };\n\n  static VITALS_CONFIG = {\n    text: \"Vitals\",\n    color: \"#8716E0\",\n    icon: PulseIcon,\n    items: [\n      {text: 'Temperature', key: 'temperature', unit: 'Celsius'},\n      {text: 'Pulse', key: 'pulse', unit: 'Per minute'},\n      {text: 'Respiratory Rate', key: 'respiratory_rate', unit: 'Per minute'},\n      {text: 'O2 Saturation', key: 'oxygen_saturation', unit: 'ABG'}\n    ]\n  };\n\n  static SCORE_CATEGORIES = [Dashboard.STATIC_RISK_CONFIG].concat(Dashboard.MEDICAL_PRECONDITIONS_CONFIG);\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.patient = new Patient();\n    this.Api = new Api();\n    this.onAgeChange = this.onAgeChange.bind(this);\n    this.onGenderChange = this.onGenderChange.bind(this);\n    this.onIDChange = this.onIDChange.bind(this);\n    this.onMedicalItemChange = this.onMedicalItemChange.bind(this);\n    this.onHomeEnvItemChange = this.onHomeEnvItemChange.bind(this);\n    this.onClinicalStatusChange = this.onClinicalStatusChange.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  reset() {\n    this.patient = new Patient();\n    initialState.patient = this.patient;\n    this.setState(initialState);\n    this.setSelections();\n  }\n\n  onHomeEnvItemChange(category, categoryItem) {\n    let item = this.state.otherConsiderationsSelection.items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n    this.patient.otherConsiderations[categoryItem] = item.selected;\n    this.setState({patient: this.patient, otherConsiderationsSelection: this.state.otherConsiderationsSelection});\n    this.Api.updateRecommendation(this.patient);\n  }\n\n  onMedicalItemChange(category, categoryItem) {\n    let item = this.state.medicalSelections[category].items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n    this.patient.medicalPreconditions[categoryItem] = item.selected;\n    this.setState({patient: this.patient, selections: this.state.medicalSelections});\n    this.updateScores();\n  }\n\n  async updateScores() {\n    let riskScores = {...this.state.riskScores};\n    let recommendation = await this.Api.updateRecommendation(this.patient);\n\n    for (let category in this.state.medicalSelections) {\n      this.state.medicalSelections[category].items.forEach(item => {\n        item.contribution = recommendation.contributing_factors[item.key] ? recommendation.contributing_factors[item.key] : 0;\n      });\n      let categoryKeys = Dashboard.MEDICAL_PRECONDITIONS_CONFIG.find(a => a.text === category).items.map(a => a.key);\n      let categoryFactors = _pick(recommendation.contributing_factors, categoryKeys);\n      riskScores[category] = Object.values(categoryFactors).reduce((a, b) => a + b, 0);\n    }\n\n    riskScores.Patient = recommendation.contributing_factors.age;\n    this.setState({riskScores, recommendation});\n  }\n\n  onAgeChange(age) {\n    this.patient.information.age = age;\n    this.setState({patient: this.patient});\n    const MIN_AGE = 2;\n    const MAX_AGE = 120;\n    if (MIN_AGE <= age && age < MAX_AGE) {\n      this.updateScores();\n    }\n  }\n\n  onGenderChange(gender) {\n    this.patient.information.gender = gender;\n    this.setState({patient: this.patient});\n    this.updateScores();\n  }\n\n  async onIDChange(event) {\n    this.patient.id = event.target.value;\n    this.setState({patient: this.patient});\n    if (isIsraeliIdValid(this.patient.id)) {\n      let userInfo = await this.Api.getUserInfo(this.patient.id);\n      if (userInfo !== 'patient not found') {\n        this.patient = this.patient.toClientModel(this.patient.id, userInfo)\n        this.setSelections();\n      }\n      this.setState({patient: this.patient});\n      this.updateScores();\n    }\n  }\n\n  onClinicalStatusChange(key, value) {\n    this.patient.clinicalStatus[key] = value;\n    this.setState({patient: this.patient});\n    this.Api.updateRecommendation(this.patient);\n  }\n\n  setSelections() {\n    let medicalSelections = {...this.state.medicalSelections};\n    let otherConsiderationsSelection = {...this.state.otherConsiderationsSelection};\n    // eslint-disable-next-line no-sequences\n    Object.assign(this.state.riskScores, Dashboard.SCORE_CATEGORIES.map(o => o.text).reduce((a,b) => (a[b] = 0, a),{}));\n    Dashboard.MEDICAL_PRECONDITIONS_CONFIG.forEach(category => {\n      medicalSelections[category.text] = category;\n      medicalSelections[category.text].items = medicalSelections[category.text].items.map(item => {\n        return {...item, selected: this.patient.medicalPreconditions[item.key], contribution: 0}\n      });\n    });\n\n    otherConsiderationsSelection = Dashboard.HOME_ENV_CONFIG;\n    otherConsiderationsSelection.items = otherConsiderationsSelection.items.map(item => {\n      return {...item, selected: this.patient.otherConsiderations[item.key]}\n    });\n    this.setState({medicalSelections, otherConsiderationsSelection});\n  }\n\n  render() {\n    const { classes } = this.props;\n    return <Grid container>\n      <Grid item md={8} className={classes.leftPanel}>\n        <Box py={categoryPadding}>\n          <PatientInfo color={Dashboard.STATIC_RISK_CONFIG.color}\n                       icon={Dashboard.STATIC_RISK_CONFIG.icon}\n                       patient={this.state.patient}\n                       recommendation={this.state.recommendation}\n                       onPatientAgeChange={this.onAgeChange}\n                       onPatientGenderChange={this.onGenderChange}\n                       onIDChange={this.onIDChange}/>\n        </Box>\n        <Divider light classes={{root: classes.divider}}/>\n        {Object.keys(this.state.medicalSelections).map(categoryKey =>\n          <div key={categoryKey}>\n            <Box py={categoryPadding}>\n              <RiskCategory onSelectionChange={this.onMedicalItemChange}\n                            items={this.state.medicalSelections[categoryKey].items}\n                            icon={this.state.medicalSelections[categoryKey].icon}\n                            color={this.state.medicalSelections[categoryKey].color}\n                            categoryName={categoryKey}/>\n            </Box>\n            <Divider light classes={{root: classes.divider}}/>\n          </div>\n        )}\n        {this.state.otherConsiderationsSelection.items &&\n          <Box py={categoryPadding}>\n            <RiskCategory onSelectionChange={this.onHomeEnvItemChange}\n                          items={this.state.otherConsiderationsSelection.items}\n                          icon={Dashboard.HOME_ENV_CONFIG.icon}\n                          color={Dashboard.HOME_ENV_CONFIG.color}\n                          categoryName={Dashboard.HOME_ENV_CONFIG.text}/>\n          </Box>\n        }\n        <Divider light classes={{root: classes.divider}}/>\n        <Box py={categoryPadding}>\n          <Vitals color={Dashboard.VITALS_CONFIG.color}\n                  icon={Dashboard.VITALS_CONFIG.icon}\n                  items={Dashboard.VITALS_CONFIG.items}\n                  patient={this.state.patient}\n                  onClinicalStatusChange={this.onClinicalStatusChange}/>\n        </Box>\n      </Grid>\n      <Grid item md={4}>\n        <Summary patient={this.state.patient} riskScores={this.state.riskScores} recommendation={this.state.recommendation} onClearAll={this.reset}/>\n      </Grid>\n    </Grid>\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Dashboard);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { memo } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = theme => ({\n  wrapper: {\n    width: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  }\n});\n\nfunction Routing(props) {\n  const {\n    classes\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import { Auth } from \"aws-amplify\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport theme from '../../../theme';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  leftSide: {\n    flexGrow: 1\n  },\n  userName: {\n    textAlign: 'end'\n  }\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [username, setUserName] = React.useState(\"Dr. Liat Ezra\");\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSignOut = () => {\n    Auth.signOut()\n    .then(data => console.log(data))\n    .catch(err => console.log(err));\n  };\n\n  Auth.currentAuthenticatedUser()\n    .then(user => {\n      setUserName(user.username)\n    })\n    .catch(err => console.error(err));\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar} variant={'outlined'}>\n        <Toolbar>\n            <ListItem alignItems=\"center\" className={classes.leftSide}>\n              <Box color=\"text.primary\" fontWeight={900} fontSize={24} mr={2}>HOSP</Box>\n              <Divider orientation=\"vertical\" flexItem></Divider>\n              <Box color={theme.palette.secondary.main} fontSize={18} ml={2}>Decision Support Tool</Box>\n            </ListItem>\n          <ListItem>\n            <ListItemText className={classes.userName} primary={<Typography color=\"textPrimary\">{username}</Typography>}/>\n            <IconButton\n              onClick={handleMenu}\n              color=\"primary\">\n              <ArrowDropDownIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}>\n              <MenuItem onClick={handleClose}>About</MenuItem>\n              <MenuItem onClick={handleSignOut}>Logout</MenuItem>\n            </Menu>\n          </ListItem>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\n\nconst styles = theme => ({\n  main: {\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0\n    }\n  }\n});\n\n\nclass Main extends PureComponent {\n  state = {\n    CardChart: null,\n    EmojiTextArea: null,\n    ImageCropper: null,\n    Dropzone: null,\n    DateTimePicker: null,\n    transactions: [],\n    statistics: { views: [], profit: [] },\n    posts: [],\n    targets: [],\n    messages: [],\n    isAccountActivated: false,\n    addBalanceDialogOpen: false\n  };\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <NavBar/>\n        <main className={classNames(classes.main)}>\n          <Routing/>\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);\n"],"sourceRoot":""}