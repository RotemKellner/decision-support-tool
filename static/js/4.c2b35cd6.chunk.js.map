{"version":3,"sources":["logged_in/components/dashboard/PatientInfo.js","icons/icons.js","logged_in/components/dashboard/MultiColorProgressBar.js","logged_in/components/dashboard/Summary.js","logged_in/components/dashboard/RiskCategory.js","logged_in/components/dashboard/Vitals.js","api/Api.js","logged_in/components/dashboard/Patient.js","logged_in/components/dashboard/Dashboard.js","shared/components/PropsRoute.js","logged_in/components/Routing.js","logged_in/components/navigation/NavBar.js","logged_in/components/Main.js"],"names":["PatientInfo","props","onAgeChange","bind","event","age","Number","target","value","this","onPatientAgeChange","onPatientGenderChange","isIsraeliIdValid","patient","id","classes","Icon","icon","Grid","container","spacing","alignItems","item","md","ListItem","style","color","Box","m","Typography","variant","display","TextField","type","className","idInput","error","isIDValid","label","onChange","onIDChange","CircularProgress","ageInput","Boolean","information","RadioGroup","aria-label","gender","onGenderChange","width","FormControlLabel","control","Radio","size","visibility","Checkbox","checked","otherConsiderations","pregnent_healthy","name","Component","withStyles","theme","marginRight","withTheme","HotelIcon","SvgIcon","d","RobotIcon","MultiColorProgressBar","parent","values","readings","length","map","i","percent","key","calibrations","bars","getProgressData","riskScores","makeNice","a","toFixed","replace","results","Dashboard","SCORE_CATEGORIES","find","config","text","push","emptyPercentage","r","reduce","b","section1","margin","section2","section3","chips","paddingTop","xs","direction","alignContent","justify","gutterBottom","recommendation","Chip","mr","Divider","Button","startIcon","fontSize","onClick","html2canvas","document","querySelector","then","canvas","createElement","href","toDataURL","download","click","onClearAll","RiskCategory","categoryName","chipWrapper","items","Object","keys","detail","isSelected","selected","isContribution","contribution","palette","grey","fontWeight","backgroundColor","fade","onSelectionChange","justifyContent","flexWrap","Vitals","state","onClinicalStatusChange","disableGutters","vital","clinicalStatus","e","vitalChange","input","helperText","unit","Api","baseURL","headers","axios","post","toServerModel","data","patient_id","md5","Math","max","risk_score","contributing_factors","Patient","coronaPositive","medicalPreconditions","copd","htn","dm","smoker","cad","chf","ckd","hd","cld","dementia","cancer","aids","temperature","pulse","respiratory_rate","auscultation","mental_status","oxygen_saturation","treatment","psychiatric_treatment","anti_inflamatory_regular_treatment","growth_hormone_children","immuno_depressant_drugs","mobility_problem","potential_for_home_quarentine","youngs_with_asthma","_cloneDeep","patient_information","BoolToNum","corona_status","corona_positive","medical_preconditions","clinical_status","other_considerations","userInfo","NumToBool","object","returnObject","entries","initialState","medicalSelections","otherConsiderationsSelection","onMedicalItemChange","onHomeEnvItemChange","reset","setState","setSelections","category","categoryItem","updateRecommendation","selections","updateScores","forEach","categoryKeys","MEDICAL_PRECONDITIONS_CONFIG","categoryFactors","_pick","getPatientScore","getUserInfo","toClientModel","assign","o","HOME_ENV_CONFIG","leftPanel","py","STATIC_RISK_CONFIG","light","categoryKey","VITALS_CONFIG","AccountCircleOutlinedIcon","FavoriteBorderOutlinedIcon","ListAltOutlinedIcon","HomeOutlinedIcon","concat","borderRight","PropsRoute","component","rest","render","routeProps","finalProps","React","renderMergedProps","wrapper","breakpoints","up","marginLeft","memo","path","withWidth","appBar","boxShadow","shadows","common","white","transition","transitions","create","easing","sharp","duration","leavingScreen","down","appBarToolbar","paddingLeft","paddingRight","drawerPaper","height","whiteSpace","border","overflowX","marginTop","black","smBordered","borderRadius","menuLink","textDecoration","primary","iconListItem","shape","paddingBottom","textPrimary","main","mobileItemSelected","brandText","brandSubText","username","justifyCenter","permanentDrawerListItem","AppBar","position","Toolbar","orientation","flexItem","classNames","isWidthUp","ListItemText","Main","CardChart","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","transactions","statistics","views","profit","posts","targets","messages","isAccountActivated","addBalanceDialogOpen","PureComponent"],"mappings":"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","file":"static/js/4.c2b35cd6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport isIsraeliIdValid from 'israeli-id-validator';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  idInput: {\n    marginRight: theme.spacing(2)\n  },\n  ageInput: {\n    marginRight: theme.spacing(2),\n    width: 100\n  }\n});\n\nclass PatientInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.onAgeChange = this.onAgeChange.bind(this);\n  }\n\n  onAgeChange(event) {\n    let age = Number(event.target.value);\n    this.props.onPatientAgeChange(age);\n  }\n\n  onGenderChange(event) {\n    this.props.onPatientGenderChange(event.target.value);\n  }\n\n  isIDValid() {\n    return isIsraeliIdValid(this.props.patient.id);\n  }\n\n  render() {\n  const { classes } = this.props;\n  const Icon = this.props.icon;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={2}>\n      <ListItem>\n        <Icon style={{ color: this.props.color }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Patient\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={10}>\n      <Grid container alignItems={'center'}>\n          <TextField type={'number'} className={classes.idInput}\n                     error={!this.isIDValid()}\n                     label={'ID'}\n                     value={this.props.patient.id}\n                     variant=\"outlined\"\n                     onChange={this.props.onIDChange}\n                     color=\"secondary\">\n            <CircularProgress />\n          </TextField>\n          <TextField type={'number'} className={classes.ageInput}\n                     label={'Age'}\n                     variant=\"outlined\"\n                     value={Boolean(this.props.patient.information.age) && this.props.patient.information.age}\n                     onChange={this.onAgeChange}\n                     color=\"secondary\"/>\n        <RadioGroup aria-label=\"gender\" value={this.props.patient.information.gender} style={{display: 'inline'}} onChange={this.onGenderChange.bind(this)}>\n          <Grid container style={{display: 'inline-flex', width: 185}}>\n            <Grid item md={6}>\n              <FormControlLabel value=\"female\" control={<Radio size={'small'} color={'secondary'}/>} label=\"Female\"/>\n            </Grid>\n            <Grid item md={6} >\n              <FormControlLabel value=\"male\" control={<Radio size={'small'} color={'secondary'}/>} label=\"Male\"/>\n            </Grid>\n            <Grid item md={12}>\n              <FormControlLabel\n                style={{visibility: this.props.patient.information.gender === 'female' ? 'visible' : 'hidden'}}\n                control={\n                  <Checkbox\n                    size={'small'}\n                    checked={this.props.patient.otherConsiderations.pregnent_healthy}\n                    onChange={() => {}}\n                    name=\"checkedB\"\n                    color=\"secondary\"\n                  />}\n                label=\"Pregnant\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              size={'small'}\n              checked={true}\n              onChange={() => {}}\n              name=\"checkedB\"\n              color=\"secondary\"\n            />}\n          label=\"COVID-19 Positive\"\n        />\n      </Grid>\n    </Grid>\n  </Grid>\n  };\n}\n\nPatientInfo.propTypes = {\n  icon: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  patient: PropTypes.object.isRequired,\n  onPatientAgeChange: PropTypes.func.isRequired,\n  onPatientGenderChange: PropTypes.func.isRequired,\n  onIDChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(PatientInfo);\n","import SvgIcon from '@material-ui/core/SvgIcon';\nimport React from 'react';\n\nfunction HotelIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M2,22 L2,20 L5,20 L5,2 L19,2 L19,20 L22,20 L22,22 L2,22 Z M17,4 L7,4 L7,20 L10,20 L10,15 L14,15 L14,20 L17,20 L17,4 Z M11,11 L11,13 L8,13 L8,11 L11,11 Z M16,11 L16,13 L13,13 L13,11 L16,11 Z M11,8 L11,10 L8,10 L8,8 L11,8 Z M16,8 L16,10 L13,10 L13,8 L16,8 Z M11,5 L11,7 L8,7 L8,5 L11,5 Z M16,5 L16,7 L13,7 L13,5 L16,5 Z\"/>\n    </SvgIcon>\n  );\n}\n\nfunction LungsIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12,2 C12.5522847,2 13,2.44771525 13,3 L12.9997864,9.585 L14.0465505,10.6318682 C14.3073108,9.13371144 15.5282684,8 16.9951047,8 C19.9951047,8 21.9951047,14.4615385 21.9951047,17.6923077 C21.9951047,20.0713805 20.2042437,22 17.9951047,22 C15.8529093,22 14.1040258,20.1864955 14,17.907305 L14,13.414 L11.9997864,11.414 L9.994,13.418 L9.99510469,17.907305 C9.89432968,20.1152708 8.2498943,21.8862012 6.19964034,21.9947281 L6,22 C3.790861,22 2,20.0713805 2,17.6923077 C2,14.4615385 4,8 7,8 C8.46782012,8 9.68943157,9.13523269 9.94907756,10.6348831 L10.9997864,9.585 L11,3 C11,2.44771525 11.4477153,2 12,2 Z M16.9951047,10 C16.5332306,10 16.0958448,10.4146337 16.0101661,11.0166078 L16,11.118 L15.9979201,17.8161168 C16.0523834,19.0093995 16.8823096,19.9144576 17.855214,19.9942701 L17.9951047,20 C19.0652012,20 19.9951047,18.9985655 19.9951047,17.6923077 C19.9951047,14.5272955 18.0332767,10 16.9951047,10 Z M7,10 C5.96182804,10 4,14.5272955 4,17.6923077 C4,18.9417716 4.85080019,19.9123425 5.86128215,19.994378 L6,20 L6.13989069,19.9942701 C7.06414989,19.9184482 7.85937124,19.0978422 7.98327819,17.9928804 L7.9971846,17.8161168 L7.99510469,11.118 L7.98493856,11.0166078 C7.89925987,10.4146337 7.46187408,10 7,10 Z\"/>\n    </SvgIcon>\n  );\n}\n\nfunction PulseIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M3,13H5.79L10.1,4.79L11.28,13.75L14.5,9.66L17.83,13H21V15H17L14.67,12.67L9.92,18.73L8.94,11.31L7,15H3V13Z\" />\n    </SvgIcon>\n  );\n}\n\nfunction RobotIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12,2 C13.1045695,2 14,2.8954305 14,4 C14,4.7398375 13.5982846,5.38584934 13.0010775,5.73181186 L13,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20.0010775,11.2681881 C20.5982846,11.6141507 21,12.2601625 21,13 C21,13.7398375 20.5982846,14.3858493 20.0010775,14.7318119 L20,16 C20,17.1045695 19.1045695,18 18,18 L14,18 L14,20 L21,20 C21.5522847,20 22,20.4477153 22,21 C22,21.5522847 21.5522847,22 21,22 L3,22 C2.44771525,22 2,21.5522847 2,21 C2,20.4477153 2.44771525,20 3,20 L10,20 L10,18 L6,18 C4.8954305,18 4,17.1045695 4,16 L3.99992752,14.7323937 C3.40216612,14.3865739 3,13.7402524 3,13 C3,12.2597476 3.40216612,11.6134261 3.99992752,11.2676063 L4,10 C4,8.8954305 4.8954305,8 6,8 L11,8 L10.9999275,5.73239368 C10.4427094,5.41002921 10.0554537,4.82654371 10.0054857,4.14926234 L10,4 C10,2.8954305 10.8954305,2 12,2 Z M18,10 L6,10 L6,16 L18,16 L18,10 Z M10,12 L10,14 L8,14 L8,12 L10,12 Z M16,12 L16,14 L14,14 L14,12 L16,12 Z\"/>\n    </SvgIcon>\n  );\n}\n\n\nexport {HotelIcon, LungsIcon, PulseIcon, RobotIcon}","import {withStyles} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './MultiColorProgressBar.css';\n\nconst styles = theme => ({\n\n});\n\nclass MultiColorProgressBar extends Component {\n  render() {\n    const parent = this.props;\n\n    let values = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"value\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>{item.value}</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let calibrations = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"graduation\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>|</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let bars = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"bar\" style={{'backgroundColor': item.color, 'width': item.percent + '%'}}  key={i}>\n\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    return (\n      <div className=\"multicolor-bar\">\n        <div className=\"values\">\n          {values === ''?'':values}\n        </div>\n        <div className=\"scale\">\n          {calibrations === ''?'':calibrations}\n        </div>\n        <div className=\"bars\">\n          {bars === ''?'':bars}\n        </div>\n      </div>\n    );\n  }\n}\n\nMultiColorProgressBar.propTypes = {\n  readings: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(MultiColorProgressBar);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport Box from '@material-ui/core/Box';\nimport HomeIcon from '@material-ui/icons/Home';\nimport {RobotIcon, HotelIcon} from '../../../icons/icons';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\n\nimport Chip from '@material-ui/core/Chip';\nimport MultiColorProgressBar from './MultiColorProgressBar';\nimport Dashboard from './Dashboard';\nimport html2canvas from 'html2canvas';\n\nconst styles = theme => ({\n  section1: {\n    margin: theme.spacing(3),\n  },\n  section2: {\n    margin: theme.spacing(3)\n  },\n  section3: {\n    margin: theme.spacing(3),\n  },\n  chips: {\n    paddingTop: theme.spacing(1)\n  }\n});\n\nfunction getProgressData(riskScores) {\n  const MAX_VALUE = 20;\n  let makeNice = a => a.toFixed(1).replace(/[.,]00$/, \"\");\n  let toPrecent = (item) => makeNice(((item / MAX_VALUE) * 100));\n\n  let results = [];\n  for (let key in riskScores) {\n    let color = Dashboard.SCORE_CATEGORIES.find(config => config.text === key).color;\n    results.push({name: key, value: makeNice(riskScores[key]), percent: toPrecent(riskScores[key]), color});\n  }\n  let emptyPercentage = 100 - results.map(r => Number(r.percent)).reduce((a,b) => a + b, 0);\n  if (emptyPercentage) {\n    results.push({name: '', value: makeNice(emptyPercentage), percent: emptyPercentage, color: '#fff'});\n  }\n  return results;\n}\n\nfunction Summary(props) {\n  function screenshot() {\n    html2canvas(document.querySelector('main')).then(canvas => {\n      var a = document.createElement('a');\n      a.href = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n      a.download = `${props.patient.id}_decision_tool.png`;\n      a.click();\n    })\n  }\n  const { classes } = props;\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <MultiColorProgressBar readings={getProgressData(props.riskScores)}/>\n          </Grid>\n          {/*<Grid item>*/}\n          {/*  <OutlinedInput value={props.totalRiskScore.toPrecision(3)}></OutlinedInput>*/}\n          {/*</Grid>*/}\n        </Grid>\n      </div>\n      <Grid container direction={'column'} alignContent={'center'}>\n        <Grid item className={classes.section2} container={true} justify={'center'}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n            <Typography gutterBottom>\n              Recommendation\n            </Typography>\n\n            {(() => {\n              switch (props.recommendation.recommendation) {\n                case 'home':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>;\n                case 'hotel':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>;\n                case 'hospital':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>;\n                default:\n                  return ''\n              }\n            })()}\n          </Grid>\n        </Grid>\n        <Grid item className={classes.section3}>\n          <Grid container direction={'column'} alignContent={'center'}>\n            <Grid item container={true} justify={'center'}>\n              <Box mr={1}><RobotIcon></RobotIcon></Box>\n              <Typography variant=\"h6\">What is your decision??</Typography>\n            </Grid>\n            <Grid item container={true} justify={'center'}>\n              <Typography variant={'body2'}>Human input will improve the algorithm</Typography>\n            </Grid>\n            <Grid item container={true} justify={'space-evenly'} className={classes.chips}>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider/>\n      <Grid container justify={'space-around'}>\n        <Grid item>\n          <Button startIcon={<SaveAltIcon fontSize=\"small\" />} color=\"secondary\" onClick={screenshot}>Save</Button>\n        </Grid>\n        <Grid item>\n          <Button startIcon={<CloseIcon fontSize=\"small\" />} color=\"secondary\" onClick={props.onClearAll}>Clear all</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nSummary.propTypes = {\n  patient: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  riskScores: PropTypes.object.isRequired,\n  recommendation: PropTypes.object.isRequired,\n  onClearAll: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Summary);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport theme from '../../../theme';\n\nconst styles = theme => ({\n  chipWrapper: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    }\n  }\n});\n\nclass RiskCategory extends Component {\n  render() {\n    const { classes } = this.props;\n    const Icon = this.props.icon;\n    return <Grid container spacing={2} alignItems={'center'}>\n      <Grid item md={2}>\n        <ListItem>\n          <Icon style={{ color: this.props.color }}/>\n          <Box m={1}/>\n          <Typography\n            variant={'body2'}\n            display={'inline'}\n            color=\"primary\">\n            {this.props.categoryName}\n          </Typography>\n        </ListItem>\n      </Grid>\n      <Grid item md={10} className={classes.chipWrapper}>\n          {this.props.items && Object.keys(this.props.items).map((detail, id) => {\n            let isSelected = this.props.items[detail].selected;\n            let isContribution = Boolean(this.props.items[detail].contribution);\n            let color = isSelected ? this.props.color : theme.palette.grey[600];\n            let label = `${this.props.items[detail].text} ${isContribution ? '+'+this.props.items[detail].contribution: ''}`;\n            return <Box key={id} fontWeight={isSelected ? 'bold' : 'normal'}><Chip\n                         style={{backgroundColor: fade(color, 0.2), color: color}}\n                         label={label}\n                         onClick={this.props.onSelectionChange.bind(null, this.props.categoryName, this.props.items[detail].key)}/>\n            </Box>;\n          })}\n      </Grid>\n    </Grid>\n  };\n}\n\nRiskCategory.propTypes = {\n  categoryName: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.object.isRequired\n  ]),\n  color: PropTypes.string.isRequired,\n  onSelectionChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(RiskCategory);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  input: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nclass Vitals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  vitalChange(event, key) {\n    this.props.onClinicalStatusChange(key, Number(event.target.value));\n  }\n\n  render() {\n  const { classes } = this.props;\n    const Icon = this.props.icon;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={2}>\n      <ListItem>\n        <Icon style={{ color: this.props.color }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Vitals\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={10}>\n      <ListItem disableGutters>\n        {this.props.items.map(vital =>\n          <TextField\n            value={this.props.patient.clinicalStatus[vital.key]}\n            onChange={(e) => this.vitalChange(e, vital.key)}\n            key={vital.key}\n            type={'number'}\n            className={classes.input}\n            label={vital.text}\n            helperText={vital.unit}\n            variant=\"outlined\"\n            color=\"secondary\"/>\n        )}\n      </ListItem>\n    </Grid>\n  </Grid>\n  };\n}\n\nVitals.propTypes = {\n  icon: PropTypes.func.isRequired,\n  color: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  patient: PropTypes.object.isRequired,\n  onClinicalStatusChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Vitals);\n","import axios from 'axios';\nimport md5 from 'md5';\n\nclass Api {\n  constructor() {\n    this.baseURL = 'https://cn8pc7plbl.execute-api.eu-west-1.amazonaws.com/staging/';\n    this.config = {\n      headers: {'Content-Type': 'application/json', 'x-api-key': 'inawDBjEa12HYpdIvkUDpaxAcdKA3l4Da7aWcTr7'}\n    }\n  }\n\n  async updateRecommendation(patient) {\n    return axios.post(this.baseURL + 'getPatientModelRecommendation', patient.toServerModel(), this.config).then(a => a.data.recommendation);\n  }\n\n  async getUserInfo(id) {\n    return axios.post(this.baseURL + 'getRecordsByPatient', {patient_id: md5(id)}, this.config).then(a => Object.values(a.data || {})[0]);\n  }\n\n  getPatientScore(recommendation) {\n    return Math.max(0, recommendation.risk_score - Object.values(recommendation.contributing_factors).reduce((a,b) => a+b , 0));\n  }\n}\n\nexport {Api};","import _cloneDeep from 'lodash/cloneDeep';\nimport md5 from 'md5';\n\nclass Patient {\n  constructor() {\n    this.id = '';\n    this.information = {\n      age: 0,\n      gender: 'male'\n    };\n    this.coronaPositive = false;\n    this.medicalPreconditions = {\n      copd: false,\n      htn: false,\n      dm: false,\n      smoker: false,\n      cad: false,\n      chf: false,\n      ckd: false,\n      hd: false,\n      cld: false,\n      dementia: false,\n      cancer: false,\n      aids: false\n    };\n    this.clinicalStatus = {\n      temperature: 0,\n      pulse: 0,\n      respiratory_rate: 0,\n      auscultation: 0,\n      mental_status: 0,\n      oxygen_saturation: 0\n    };\n\n    this.treatment = {\n      psychiatric_treatment: false,\n      anti_inflamatory_regular_treatment: false,\n      growth_hormone_children: false,\n      immuno_depressant_drugs: false\n    };\n\n    this.otherConsiderations = {\n      mobility_problem: false,\n      potential_for_home_quarentine: false,\n      pregnent_healthy: false,\n      youngs_with_asthma: false\n    }\n  }\n\n  toServerModel() {\n    let patient = _cloneDeep(this);\n    patient.information.age = patient.information.age < 2 ? 2 : patient.information.age;\n    return {\n      patient_id: md5(patient.id),\n      patient_information: this.BoolToNum(patient.information),\n      corona_status: {\n        corona_positive: patient.coronaPositive\n      },\n      medical_preconditions: this.BoolToNum(patient.medicalPreconditions),\n      clinical_status: this.BoolToNum(patient.clinicalStatus),\n      treatment: this.BoolToNum(patient.treatment),\n      other_considerations: this.BoolToNum(patient.otherConsiderations)\n    };\n  }\n\n  toClientModel(id, userInfo) {\n    let patient = new Patient();\n    patient.id = id;\n    patient.information = userInfo.patient_information;\n    patient.medicalPreconditions = this.NumToBool(userInfo.medical_preconditions);\n    patient.clinicalStatus = userInfo.clinical_status;\n    patient.coronaPositive = userInfo.corona_status.corona_positive;\n    patient.treatment = this.NumToBool(userInfo.treatment);\n    patient.otherConsiderations = this.NumToBool(userInfo.other_considerations);\n    return patient;\n  }\n\n  BoolToNum(object) {\n    const returnObject = {};\n    for (const [key, value] of Object.entries(object)) {\n      returnObject[key] = typeof value === 'boolean' ? Number(value) : value;\n    }\n    return returnObject\n  }\n\n  NumToBool(object) {\n    const returnObject = {}\n    for (const [key, value] of Object.entries(object)) {\n      returnObject[key] = typeof value === 'number' ? Boolean(value) : value;\n    }\n    return returnObject\n  }\n\n}\n\nexport {Patient};","import React, {Component} from 'react';\nimport PatientInfo from \"./PatientInfo\";\nimport {Grid, withStyles} from '@material-ui/core';\nimport Summary from './Summary';\nimport RiskCategory from './RiskCategory';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Vitals from './Vitals';\nimport _pick from 'lodash/pick';\nimport {Api} from '../../../api/Api';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport {Patient} from './Patient';\nimport {LungsIcon, PulseIcon} from '../../../icons/icons';\nimport isIsraeliIdValid from 'israeli-id-validator';\n\nconst styles = theme => ({\n  leftPanel: {\n    borderRight: `2px ${theme.palette.grey[300]} solid`\n  }\n});\n\nconst categoryPadding = 2;\nconst initialState = {\n  patient: new Patient(),\n  medicalSelections: {},\n  otherConsiderationsSelection: {},\n  riskScores: {},\n  recommendation: {}\n};\n\nclass Dashboard extends Component {\n  static STATIC_RISK_CONFIG = {\n    text: \"Patient\",\n    key: \"Patient\",\n    color: \"#8716E0\",\n    icon: AccountCircleOutlinedIcon\n  };\n\n  static MEDICAL_PRECONDITIONS_CONFIG = [\n    {\n      text: \"Pulmonary\",\n      color: \"#00B0BB\",\n      icon: LungsIcon,\n      items: [\n        {\n          key: 'copd',\n          text: 'COPD',\n        },\n        {\n          key: 'smoker',\n          text: 'Smoker',\n        }\n      ]\n    },\n    {\n      text: \"Cardiovalcular\",\n      color: \"#E01683\",\n      icon: FavoriteBorderOutlinedIcon,\n      items: [\n        {\n          key: 'htn',\n          text: 'Hypertension',\n        },\n        {\n          key: 'hd',\n          text: 'Ischemic Heart Disease',\n        },\n        {\n          key: 'chf',\n          text: 'Heart failure'\n        }\n      ]\n    },\n    {\n      text: \"Other Conditions\",\n      color: \"#F08627\",\n      icon: ListAltOutlinedIcon,\n      items: [\n        {\n          key: 'dm',\n          text: 'Diabetes Mellitus',\n        },\n        {\n          key: 'aids',\n          text: 'HIV/AIDS',\n        },\n        {\n          key: 'dementia',\n          text: 'Dementia'\n        },\n        {\n          key: 'cld',\n          text: 'Cirrhosis / Chronic Liver Disease'\n        },\n        {\n          key: 'ckd',\n          text: 'Chronic Kidney Disease'\n        }\n      ]\n    }\n  ];\n\n  static HOME_ENV_CONFIG = {\n    text: \"Home Environment\",\n    color: \"#06B30D\",\n    icon: HomeOutlinedIcon,\n    items: [\n      {\n        key: 'mobility_problem',\n        text: 'Immobile',\n      },\n      {\n        key: 'potential_for_home_quarentine',\n        text: 'Home quarantine is possible',\n      },\n      {\n        key: 'todo missing',\n        text: 'A member of the same household is in a risk group'\n      }\n    ]\n  };\n\n  static VITALS_CONFIG = {\n    text: \"Vitals\",\n    color: \"#8716E0\",\n    icon: PulseIcon,\n    items: [\n      {text: 'Temperature', key: 'temperature', unit: 'Celsius'},\n      {text: 'Pulse', key: 'pulse', unit: 'Per minute'},\n      {text: 'Respiratory Rate', key: 'respiratory_rate', unit: 'Per minute'},\n      {text: 'O2 Saturation', key: 'oxygen_saturation', unit: 'ABG'}\n    ]\n  };\n\n  static SCORE_CATEGORIES = [Dashboard.STATIC_RISK_CONFIG].concat(Dashboard.MEDICAL_PRECONDITIONS_CONFIG);\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.patient = new Patient();\n    this.Api = new Api();\n    this.onAgeChange = this.onAgeChange.bind(this);\n    this.onGenderChange = this.onGenderChange.bind(this);\n    this.onIDChange = this.onIDChange.bind(this);\n    this.onMedicalItemChange = this.onMedicalItemChange.bind(this);\n    this.onHomeEnvItemChange = this.onHomeEnvItemChange.bind(this);\n    this.onClinicalStatusChange = this.onClinicalStatusChange.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  reset() {\n    this.patient = new Patient();\n    initialState.patient = this.patient;\n    this.setState(initialState);\n    this.setSelections();\n  }\n\n  onHomeEnvItemChange(category, categoryItem) {\n    let item = this.state.otherConsiderationsSelection.items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n    this.patient.otherConsiderations[categoryItem] = item.selected;\n    this.setState({patient: this.patient, otherConsiderationsSelection: this.state.otherConsiderationsSelection});\n    this.Api.updateRecommendation(this.patient);\n  }\n\n  onMedicalItemChange(category, categoryItem) {\n    let item = this.state.medicalSelections[category].items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n    this.patient.medicalPreconditions[categoryItem] = item.selected;\n    this.setState({patient: this.patient, selections: this.state.medicalSelections});\n    this.updateScores();\n  }\n\n  async updateScores() {\n    let riskScores = {...this.state.riskScores};\n    let recommendation = await this.Api.updateRecommendation(this.patient);\n\n    for (let category in this.state.medicalSelections) {\n      this.state.medicalSelections[category].items.forEach(item => {\n        item.contribution = recommendation.contributing_factors[item.key] ? recommendation.contributing_factors[item.key] : 0;\n      });\n      let categoryKeys = Dashboard.MEDICAL_PRECONDITIONS_CONFIG.find(a => a.text === category).items.map(a => a.key);\n      let categoryFactors = _pick(recommendation.contributing_factors, categoryKeys);\n      riskScores[category] = Object.values(categoryFactors).reduce((a, b) => a + b, 0);\n    }\n\n    riskScores.Patient = this.Api.getPatientScore(recommendation);\n    this.setState({riskScores, recommendation});\n  }\n\n  onAgeChange(age) {\n    this.patient.information.age = age;\n    this.setState({patient: this.patient});\n    const MIN_AGE = 2;\n    const MAX_AGE = 120;\n    if (MIN_AGE <= age && age < MAX_AGE) {\n      this.updateScores();\n    }\n  }\n\n  onGenderChange(gender) {\n    this.patient.information.gender = gender;\n    this.setState({patient: this.patient});\n    this.updateScores();\n  }\n\n  async onIDChange(event) {\n    this.patient.id = event.target.value;\n    this.setState({patient: this.patient});\n    if (isIsraeliIdValid(this.patient.id)) {\n      let userInfo = await this.Api.getUserInfo(this.patient.id);\n      if (userInfo !== 'patient not found') {\n        this.patient = this.patient.toClientModel(this.patient.id, userInfo)\n        this.setSelections();\n      }\n      this.setState({patient: this.patient});\n      this.updateScores();\n    }\n  }\n\n  onClinicalStatusChange(key, value) {\n    this.patient.clinicalStatus[key] = value;\n    this.setState({patient: this.patient});\n    this.Api.updateRecommendation(this.patient);\n  }\n\n  setSelections() {\n    let medicalSelections = {...this.state.medicalSelections};\n    let otherConsiderationsSelection = {...this.state.otherConsiderationsSelection};\n    // eslint-disable-next-line no-sequences\n    Object.assign(this.state.riskScores, Dashboard.SCORE_CATEGORIES.map(o => o.text).reduce((a,b) => (a[b] = 0, a),{}));\n    Dashboard.MEDICAL_PRECONDITIONS_CONFIG.forEach(category => {\n      medicalSelections[category.text] = category;\n      medicalSelections[category.text].items = medicalSelections[category.text].items.map(item => {\n        return {...item, selected: this.patient.medicalPreconditions[item.key], contribution: 0}\n      });\n    });\n\n    otherConsiderationsSelection = Dashboard.HOME_ENV_CONFIG;\n    otherConsiderationsSelection.items = otherConsiderationsSelection.items.map(item => {\n      return {...item, selected: this.patient.otherConsiderations[item.key]}\n    });\n    this.setState({medicalSelections, otherConsiderationsSelection});\n  }\n\n  render() {\n    const { classes } = this.props;\n    return <Grid container>\n      <Grid item md={8} className={classes.leftPanel}>\n        <Box py={categoryPadding}>\n          <PatientInfo color={Dashboard.STATIC_RISK_CONFIG.color}\n                       icon={Dashboard.STATIC_RISK_CONFIG.icon}\n                       patient={this.state.patient}\n                       onPatientAgeChange={this.onAgeChange}\n                       onPatientGenderChange={this.onGenderChange}\n                       onIDChange={this.onIDChange}/>\n        </Box>\n        <Divider light/>\n        {Object.keys(this.state.medicalSelections).map(categoryKey =>\n          <div key={categoryKey}>\n            <Box py={categoryPadding}>\n              <RiskCategory onSelectionChange={this.onMedicalItemChange}\n                            items={this.state.medicalSelections[categoryKey].items}\n                            icon={this.state.medicalSelections[categoryKey].icon}\n                            color={this.state.medicalSelections[categoryKey].color}\n                            categoryName={categoryKey}/>\n            </Box>\n            <Divider light/>\n          </div>\n        )}\n        {this.state.otherConsiderationsSelection.items &&\n          <Box py={categoryPadding}>\n            <RiskCategory onSelectionChange={this.onHomeEnvItemChange}\n                          items={this.state.otherConsiderationsSelection.items}\n                          icon={Dashboard.HOME_ENV_CONFIG.icon}\n                          color={Dashboard.HOME_ENV_CONFIG.color}\n                          categoryName={Dashboard.HOME_ENV_CONFIG.text}/>\n          </Box>\n        }\n        <Divider light/>\n        <Box py={categoryPadding}>\n          <Vitals color={Dashboard.VITALS_CONFIG.color}\n                  icon={Dashboard.VITALS_CONFIG.icon}\n                  items={Dashboard.VITALS_CONFIG.items}\n                  patient={this.state.patient}\n                  onClinicalStatusChange={this.onClinicalStatusChange}/>\n        </Box>\n      </Grid>\n      <Grid item md={4}>\n        <Summary patient={this.state.patient} riskScores={this.state.riskScores} recommendation={this.state.recommendation} onClearAll={this.reset}/>\n      </Grid>\n    </Grid>\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Dashboard);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { memo } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  }\n});\n\nfunction Routing(props) {\n  const {\n    classes\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React, { Fragment} from \"react\";\nimport classNames from \"classnames\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  ListItem,\n  ListItemText,\n  Box,\n  withStyles,\n  isWidthUp,\n  withWidth\n} from \"@material-ui/core\";\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0\n    }\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    },\n    backgroundColor: theme.palette.common.black\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\"\n    }\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  textPrimary: {\n    color: theme.palette.primary.main\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  brandText: {\n    marginRight: theme.spacing(1),\n  },\n  brandSubText: {\n    marginLeft: theme.spacing(1),\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2)\n  },\n  justifyCenter: {\n    justifyContent: \"center\"\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n});\n\nfunction NavBar(props) {\n  const { classes, width } = props;\n\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <ListItem display=\"flex\" alignItems=\"center\">\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\">\n                HOSP\n              </Typography>\n              <Divider orientation=\"vertical\" flexItem></Divider>\n              <Typography\n                variant=\"subtitle1\"\n                className={classes.brandSubText}\n                display=\"block\"\n                color=\"secondary\">\n                Decision Support Tool\n              </Typography>\n          </ListItem>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              {isWidthUp(\"sm\", width) && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">Dr. Liat Ezra</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </Fragment>\n  );\n}\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\n\nconst styles = theme => ({\n  main: {\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0\n    }\n  }\n});\n\n\nclass Main extends PureComponent {\n  state = {\n    CardChart: null,\n    EmojiTextArea: null,\n    ImageCropper: null,\n    Dropzone: null,\n    DateTimePicker: null,\n    transactions: [],\n    statistics: { views: [], profit: [] },\n    posts: [],\n    targets: [],\n    messages: [],\n    isAccountActivated: false,\n    addBalanceDialogOpen: false\n  };\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <NavBar/>\n        <main className={classNames(classes.main)}>\n          <Routing/>\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);\n"],"sourceRoot":""}