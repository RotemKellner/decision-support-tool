{"version":3,"sources":["logged_in/components/dashboard/PatientInfo.js","logged_in/components/dashboard/MultiColorProgressBar.js","logged_in/components/dashboard/Summary.js","logged_in/components/dashboard/RiskCategory.js","logged_in/components/dashboard/Vitals.js","logged_in/components/dashboard/Dashboard.js","shared/components/PropsRoute.js","logged_in/components/Routing.js","logged_in/components/navigation/NavBar.js","logged_in/components/Main.js"],"names":["PatientInfo","props","state","gender","onAgeChange","bind","event","this","onPatientAgeChange","target","value","setState","classes","Grid","container","spacing","alignItems","item","md","ListItem","style","color","Dashboard","STATIC_RISK_CONFIG","patient","Box","m","Typography","variant","display","disableGutters","TextField","type","className","idInput","label","onChange","onIDChange","ageInput","RadioGroup","aria-label","onGenderChange","FormControlLabel","control","Radio","Checkbox","checked","name","Component","withStyles","theme","marginRight","width","withTheme","MultiColorProgressBar","parent","values","readings","length","map","i","percent","key","calibrations","bars","getProgressData","riskScores","makeNice","a","toFixed","replace","allConfigs","Object","assign","DYNAMIC_RISK_CONFIG","results","push","emptyPercentage","r","Number","reduce","b","section1","margin","section2","section3","chips","paddingTop","xs","direction","alignContent","justify","gutterBottom","Chip","size","icon","mr","Divider","Button","startIcon","fontSize","onClick","onClearAll","RiskCategory","Icon","categoryName","items","keys","detail","id","selected","palette","grey","chip","backgroundColor","fade","onSelectionChange","vitals","unit","Vitals","vital","input","helperText","initialState","totalRiskScore","selections","_cloneDeep","reset","category","categoryItem","find","filter","updateTotalRiskScore","age","mortality","concat","forEach","leftPanel","py","data","light","categoryKey","Pulmonary","AirlineSeatFlatAngledOutlinedIcon","Cardiovalcular","FavoriteBorderOutlinedIcon","ListAltOutlinedIcon","HomeOutlinedIcon","borderRight","PropsRoute","component","rest","render","routeProps","finalProps","React","createElement","renderMergedProps","wrapper","breakpoints","up","marginLeft","memo","path","withWidth","appBar","boxShadow","shadows","common","white","transition","transitions","create","easing","sharp","duration","leavingScreen","down","appBarToolbar","justifyContent","paddingLeft","paddingRight","drawerPaper","height","whiteSpace","border","overflowX","marginTop","black","smBordered","borderRadius","menuLink","textDecoration","text","primary","iconListItem","shape","paddingBottom","textPrimary","main","mobileItemSelected","brandText","brandSubText","username","justifyCenter","permanentDrawerListItem","AppBar","position","Toolbar","orientation","flexItem","classNames","isWidthUp","ListItemText","Main","CardChart","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","transactions","statistics","views","profit","posts","targets","messages","isAccountActivated","addBalanceDialogOpen","PureComponent"],"mappings":"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","file":"static/js/4.facabbe8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dashboard from './Dashboard';\n\nconst styles = theme => ({\n  idInput: {\n    marginRight: theme.spacing(2)\n  },\n  ageInput: {\n    marginRight: theme.spacing(2),\n    width: 100\n  }\n});\n\nclass PatientInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gender: 'female'\n    };\n    this.onAgeChange = this.onAgeChange.bind(this);\n  }\n\n  onAgeChange(event) {\n    this.props.onPatientAgeChange(event.target.value);\n  }\n\n  onGenderChange(event) {\n    this.setState({gender: event.target.value});\n  }\n\n  render() {\n  const { classes } = this.props;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={3}>\n      <ListItem>\n        <AccountCircleOutlinedIcon style={{ color: Dashboard.STATIC_RISK_CONFIG.patient.color }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Patient\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={9}>\n      <ListItem disableGutters>\n        <TextField type={'number'} className={classes.idInput}\n          label={'ID'}\n          variant=\"outlined\"\n          onChange={this.props.onIDChange}\n          color=\"secondary\"/>\n        <TextField type={'number'} className={classes.ageInput}\n                   label={'Age'}\n                   variant=\"outlined\"\n                   onChange={this.onAgeChange}\n                   color=\"secondary\"/>\n        <RadioGroup aria-label=\"gender\" value={this.state.gender} onChange={this.onGenderChange.bind(this)}>\n          <FormControlLabel value=\"female\" control={<Radio color={'secondary'}/>} label=\"Female\"/>\n          <FormControlLabel value=\"male\" control={<Radio color={'secondary'}/>} label=\"Male\"/>\n        </RadioGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={true}\n              onChange={() => {}}\n              name=\"checkedB\"\n              color=\"secondary\"\n            />}\n          label=\"Pregnant\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={true}\n              onChange={() => {}}\n              name=\"checkedB\"\n              color=\"secondary\"\n            />}\n          label=\"COVID-19 Positive\"\n        />\n      </ListItem>\n    </Grid>\n  </Grid>\n  };\n}\n\nPatientInfo.propTypes = {\n  data: PropTypes.object.isRequired,\n  onPatientAgeChange: PropTypes.func.isRequired,\n  onIDChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(PatientInfo);\n","import {withStyles} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './MultiColorProgressBar.css';\n\nconst styles = theme => ({\n\n});\n\nclass MultiColorProgressBar extends Component {\n  render() {\n    const parent = this.props;\n\n    let values = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"value\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>{item.value}</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let calibrations = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"graduation\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>|</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let bars = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"bar\" style={{'backgroundColor': item.color, 'width': item.percent + '%'}}  key={i}>\n\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    return (\n      <div className=\"multicolor-bar\">\n        <div className=\"values\">\n          {values === ''?'':values}\n        </div>\n        <div className=\"scale\">\n          {calibrations === ''?'':calibrations}\n        </div>\n        <div className=\"bars\">\n          {bars === ''?'':bars}\n        </div>\n      </div>\n    );\n  }\n}\n\nMultiColorProgressBar.propTypes = {\n  readings: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(MultiColorProgressBar);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport Box from '@material-ui/core/Box';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HotelIcon from '@material-ui/icons/Hotel';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\n\nimport Chip from '@material-ui/core/Chip';\nimport MultiColorProgressBar from './MultiColorProgressBar';\nimport Dashboard from './Dashboard';\n\nconst styles = theme => ({\n  section1: {\n    margin: theme.spacing(3),\n  },\n  section2: {\n    margin: theme.spacing(3)\n  },\n  section3: {\n    margin: theme.spacing(3),\n  },\n  chips: {\n    paddingTop: theme.spacing(1)\n  }\n});\n\nfunction getProgressData(riskScores) {\n  const MAX_VALUE = 20;\n  let makeNice = a => a.toFixed(1).replace(/[.,]00$/, \"\");\n  let toPrecent = (item) => makeNice(((item / MAX_VALUE) * 100));\n  let allConfigs = Object.assign({}, Dashboard.STATIC_RISK_CONFIG, Dashboard.DYNAMIC_RISK_CONFIG);\n  let results = [];\n  for (let key in riskScores) {\n    results.push({name: key, value: makeNice(riskScores[key]), percent: toPrecent(riskScores[key]), color: allConfigs[key].color});\n  }\n  let emptyPercentage = 100 - results.map(r => Number(r.percent)).reduce((a,b) => a + b, 0);\n  if (emptyPercentage) {\n    results.push({name: '', value: makeNice(emptyPercentage), percent: emptyPercentage, color: '#fff'});\n  }\n  return results;\n}\n\nfunction Summary(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <MultiColorProgressBar readings={getProgressData(props.riskScores)}/>\n          </Grid>\n          {/*<Grid item>*/}\n          {/*  <OutlinedInput value={props.totalRiskScore.toPrecision(3)}></OutlinedInput>*/}\n          {/*</Grid>*/}\n        </Grid>\n      </div>\n      <Grid container direction={'column'} alignContent={'center'}>\n        <Grid item className={classes.section2} container={true} justify={'center'}>\n          <Typography gutterBottom>\n            Recommendation\n          </Typography>\n          <Chip size={'medium'} variant=\"outlined\" color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>\n        </Grid>\n        <Grid item className={classes.section3}>\n          <Grid container direction={'column'} alignContent={'center'}>\n            <Grid item container={true} justify={'center'}>\n              <Box mr={1}><ComputerIcon></ComputerIcon></Box>\n              <Typography variant=\"h6\">What is your decision??</Typography>\n            </Grid>\n            <Grid item container={true} justify={'center'}>\n              <Typography variant={'body2'}>Human input will improve the algorithm</Typography>\n            </Grid>\n            <Grid item container={true} justify={'space-evenly'} className={classes.chips}>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider/>\n      <Grid container justify={'space-around'}>\n        <Grid item>\n          <Button startIcon={<SaveAltIcon fontSize=\"small\" />} color=\"secondary\">Save</Button>\n        </Grid>\n        <Grid item>\n          <Button startIcon={<CloseIcon fontSize=\"small\" />} color=\"secondary\" onClick={props.onClearAll}>Clear all</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nSummary.propTypes = {\n  theme: PropTypes.object.isRequired,\n  riskScores: PropTypes.object.isRequired,\n  totalRiskScore: PropTypes.number.isRequired,\n  onClearAll: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Summary);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport theme from '../../../theme';\n\nconst styles = theme => ({\n  chip: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass RiskCategory extends Component {\n  render() {\n    const { classes } = this.props;\n    const Icon = this.props.icon;\n    return <Grid container spacing={2} alignItems={'center'}>\n      <Grid item md={3}>\n        <ListItem>\n          <Icon style={{ color: this.props.color }}/>\n          <Box m={1}/>\n          <Typography\n            variant={'body2'}\n            display={'inline'}\n            color=\"primary\">\n            {this.props.categoryName}\n          </Typography>\n        </ListItem>\n      </Grid>\n      <Grid item md={9}>\n        <ListItem disableGutters>\n          {this.props.items && Object.keys(this.props.items).map((detail, id) => {\n            let color = this.props.items[detail].selected ? this.props.color : theme.palette.grey[600];\n            return <Chip key={id}\n                         className={classes.chip}\n                         style={{backgroundColor: fade(color, 0.2), color: color}}\n                         label={this.props.items[detail].key}\n                         onClick={this.props.onSelectionChange.bind(null, this.props.categoryName, this.props.items[detail].key)}/>;\n          })}\n        </ListItem>\n      </Grid>\n    </Grid>\n  };\n}\n\nRiskCategory.propTypes = {\n  categoryName: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  icon: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  onSelectionChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(RiskCategory);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\n\nconst color = '#F08627';\nconst vitals = [{name: 'Temperature', unit: 'Celsius'},\n  {name: 'Pulse', unit: 'Per minute'},\n  {name: 'Respiratory Rate', unit: 'Per minute'},\n  {name: 'O2 Saturation', unit: 'ABG'}];\n\nconst styles = theme => ({\n  input: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nclass Vitals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n  const { classes } = this.props;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={3}>\n      <ListItem>\n        <ShowChartIcon style={{ color }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Vitals\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={9}>\n      <ListItem disableGutters>\n        {vitals.map(vital =>\n          <TextField\n            key={vital.name}\n            type={'number'}\n            className={classes.input}\n            label={vital.name}\n            helperText={vital.unit}\n            variant=\"outlined\"\n            color=\"secondary\"/>\n        )}\n      </ListItem>\n    </Grid>\n  </Grid>\n  };\n}\n\nVitals.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Vitals);\n","import React, {Component} from 'react';\nimport PatientInfo from \"./PatientInfo\";\nimport {Grid, withStyles} from '@material-ui/core';\nimport Summary from './Summary';\nimport RiskCategory from './RiskCategory';\nimport AirlineSeatFlatAngledOutlinedIcon from '@material-ui/icons/AirlineSeatFlatAngledOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Vitals from './Vitals';\nimport _cloneDeep from 'lodash/cloneDeep';\n\nconst styles = theme => ({\n  leftPanel: {\n    borderRight: `2px ${theme.palette.grey[300]} solid`\n  }\n});\n\nconst FACTOR = 0.9;\nconst categoryPadding = 2;\nconst otherConditions = 'Other Conditions';\nconst homeEnvironment = 'Home Environment';\nconst initialState = {\n  id: 0,\n  riskScores: {},\n  totalRiskScore: 0,\n  selections: {}\n};\n\nclass Dashboard extends Component {\n  static STATIC_RISK_CONFIG = {\n    patient: {\n      color: '#F08627'\n    }\n  };\n\n  static DYNAMIC_RISK_CONFIG = {\n    Pulmonary: {\n      color: '#8716E0',\n      icon: AirlineSeatFlatAngledOutlinedIcon,\n      items: ['COPD', 'Smoker']\n    },\n    Cardiovalcular: {\n      color: '#E01683',\n      icon: FavoriteBorderOutlinedIcon,\n      items: ['Hypertension', 'Ischemic Heart Disease', 'Heart failure']\n    },\n    [otherConditions]: {\n      color: '#00B0BB',\n      icon: ListAltOutlinedIcon,\n      items: ['Diabetes Mellitus', 'HIV/AIDS', 'Dementia', 'Cirrhosis / Chronic Liver Disease', 'Chronic Kidney Disease']\n    },\n    [homeEnvironment]: {\n      color: '#06B30D',\n      icon: HomeOutlinedIcon,\n      items: ['Immobile', 'Home quarantine is possible', 'A member of the same household is in a risk group']\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = _cloneDeep(initialState);\n    this.onAgeChange = this.onAgeChange.bind(this);\n    this.onIDChange = this.onIDChange.bind(this);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  onSelectionChange(category, categoryItem) {\n    let selections = {...this.state.selections};\n    let item = selections[category].items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n\n    let riskScores = {...this.state.riskScores};\n    riskScores[category] = selections[category].items.filter(item => item.selected).reduce(a => a + 0.9, 0);\n    this.setState({selections});\n    this.setState({riskScores});\n    this.updateTotalRiskScore(riskScores);\n  }\n\n  onAgeChange(age) {\n    let riskScores = {...this.state.riskScores};\n    riskScores.patient = (age / 19.32) * FACTOR;\n    this.setState({riskScores});\n    this.updateTotalRiskScore(riskScores);\n  }\n\n  onIDChange(event) {\n    this.setState({id: event.target.value});\n  }\n\n  updateTotalRiskScore(riskScores) {\n    let totalRiskScore = Object.values(riskScores).reduce((a, b) => a + b, 0);\n    let mortality = (1-(0.98916**(totalRiskScore)));\n    this.setState({mortality, totalRiskScore})\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  reset() {\n    let state = _cloneDeep(initialState);\n    // eslint-disable-next-line no-sequences\n    Object.assign(state.riskScores, Object.keys(Dashboard.STATIC_RISK_CONFIG).concat(Object.keys(Dashboard.DYNAMIC_RISK_CONFIG)).reduce((a,b) => (a[b] = 0, a),{}));\n    Object.keys(Dashboard.DYNAMIC_RISK_CONFIG).forEach(key => {\n      state.selections[key] = _cloneDeep(Dashboard.DYNAMIC_RISK_CONFIG[key]);\n      state.selections[key].items = state.selections[key].items.map(item => { return {key: item, selected: false}});\n    });\n    this.setState(state);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return <Grid container>\n      <Grid item md={8} className={classes.leftPanel}>\n        <Box py={categoryPadding}>\n          <PatientInfo data={{}}\n                       onPatientAgeChange={this.onAgeChange}\n                       onIDChange={this.onIDChange}>\n          </PatientInfo>\n        </Box>\n        <Divider light/>\n        {Object.keys(this.state.selections).map(categoryKey =>\n          <div key={categoryKey}>\n            <Box py={categoryPadding}>\n              <RiskCategory onSelectionChange={this.onSelectionChange}\n                            items={this.state.selections[categoryKey].items}\n                            icon={this.state.selections[categoryKey].icon}\n                            color={this.state.selections[categoryKey].color}\n                            categoryName={categoryKey}/>\n            </Box>\n            <Divider light/>\n          </div>\n        )}\n        <Box py={categoryPadding}>\n          <Vitals data={{}}\n                  onPatientAgeChange={this.onAgeChange}\n                  onIDChange={this.onIDChange}>\n          </Vitals>\n        </Box>\n      </Grid>\n      <Grid item md={4}>\n        <Summary riskScores={this.state.riskScores} totalRiskScore={this.state.totalRiskScore} onClearAll={this.reset}/>\n      </Grid>\n    </Grid>\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Dashboard);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { memo } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  }\n});\n\nfunction Routing(props) {\n  const {\n    classes\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React, { Fragment} from \"react\";\nimport classNames from \"classnames\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  ListItem,\n  ListItemText,\n  Box,\n  withStyles,\n  isWidthUp,\n  withWidth\n} from \"@material-ui/core\";\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0\n    }\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    },\n    backgroundColor: theme.palette.common.black\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\"\n    }\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  textPrimary: {\n    color: theme.palette.primary.main\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  brandText: {\n    marginRight: theme.spacing(1),\n  },\n  brandSubText: {\n    marginLeft: theme.spacing(1),\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2)\n  },\n  justifyCenter: {\n    justifyContent: \"center\"\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n});\n\nfunction NavBar(props) {\n  const { classes, width } = props;\n\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <ListItem display=\"flex\" alignItems=\"center\">\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\">\n                HOSP\n              </Typography>\n              <Divider orientation=\"vertical\" flexItem></Divider>\n              <Typography\n                variant=\"subtitle1\"\n                className={classes.brandSubText}\n                display=\"block\"\n                color=\"secondary\">\n                Decision Support Tool\n              </Typography>\n          </ListItem>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              {isWidthUp(\"sm\", width) && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">Dr. Liat Ezra</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </Fragment>\n  );\n}\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\n\nconst styles = theme => ({\n  main: {\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0\n    }\n  }\n});\n\n\nclass Main extends PureComponent {\n  state = {\n    CardChart: null,\n    EmojiTextArea: null,\n    ImageCropper: null,\n    Dropzone: null,\n    DateTimePicker: null,\n    transactions: [],\n    statistics: { views: [], profit: [] },\n    posts: [],\n    targets: [],\n    messages: [],\n    isAccountActivated: false,\n    addBalanceDialogOpen: false\n  };\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <NavBar/>\n        <main className={classNames(classes.main)}>\n          <Routing/>\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);\n"],"sourceRoot":""}