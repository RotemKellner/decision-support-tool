{"version":3,"sources":["logged_in/components/dashboard/PatientInfo.js","logged_in/components/dashboard/MultiColorProgressBar.js","logged_in/components/dashboard/Summary.js","logged_in/components/dashboard/RiskCategory.js","logged_in/components/dashboard/Vitals.js","api/Api.js","logged_in/components/dashboard/Patient.js","logged_in/components/dashboard/Dashboard.js","shared/components/PropsRoute.js","logged_in/components/Routing.js","logged_in/components/navigation/NavBar.js","logged_in/components/Main.js"],"names":["PatientInfo","props","state","gender","patient","information","onAgeChange","bind","event","age","Number","target","value","this","onPatientAgeChange","onPatientGenderChange","setState","isIsraeliIdValid","id","classes","Icon","icon","Grid","container","spacing","alignItems","item","md","ListItem","style","color","Box","m","Typography","variant","display","TextField","type","className","idInput","error","isIDValid","label","onChange","onIDChange","ageInput","Boolean","RadioGroup","aria-label","onGenderChange","width","FormControlLabel","control","Radio","size","visibility","Checkbox","checked","otherConsiderations","pregnent_healthy","name","Component","withStyles","theme","marginRight","withTheme","MultiColorProgressBar","parent","values","readings","length","map","i","percent","key","calibrations","bars","getProgressData","riskScores","makeNice","a","toFixed","replace","results","Dashboard","SCORE_CATEGORIES","find","config","text","push","emptyPercentage","r","reduce","b","section1","margin","section2","section3","chips","paddingTop","xs","direction","alignContent","justify","gutterBottom","recommendation","Chip","mr","Divider","Button","startIcon","fontSize","onClick","onClearAll","RiskCategory","categoryName","chipWrapper","items","Object","keys","detail","isSelected","selected","isContribution","contribution","palette","grey","fontWeight","backgroundColor","fade","onSelectionChange","justifyContent","flexWrap","Vitals","onClinicalStatusChange","disableGutters","vital","clinicalStatus","e","vitalChange","input","helperText","unit","Api","baseURL","headers","axios","post","toServerModel","then","data","Math","max","risk_score","contributing_factors","Patient","coronaPositive","medicalPreconditions","copd","htn","dm","smoker","cad","chf","ckd","hd","cld","dementia","cancer","aids","temperature","pulse","respiratory_rate","auscultation","mental_status","oxygen_saturation","treatMent","psychiatric_treatment","anti_inflamatory_regular_treatment","growth_hormone_children","immuno_depressant_drugs","mobility_problem","potential_for_home_quarentine","youngs_with_asthma","_cloneDeep","patient_id","md5","patient_information","BoolToNum","corona_status","corona_positive","medical_preconditions","clinical_status","treatment","other_considerations","object","returnObject","entries","initialState","medicalSelections","otherConsiderationsSelection","onMedicalItemChange","onHomeEnvItemChange","reset","prepare","category","categoryItem","updateRecommendation","selections","updateMedicalPreconditionsScore","categoryKeys","MEDICAL_PRECONDITIONS_CONFIG","categoryFactors","_pick","updatePatientScore","getPatientScore","assign","o","forEach","HOME_ENV_CONFIG","leftPanel","py","STATIC_RISK_CONFIG","light","categoryKey","VITALS_CONFIG","AccountCircleOutlinedIcon","AirlineSeatFlatAngledOutlinedIcon","FavoriteBorderOutlinedIcon","ListAltOutlinedIcon","HomeOutlinedIcon","ShowChartIcon","concat","borderRight","PropsRoute","component","rest","render","routeProps","finalProps","React","createElement","renderMergedProps","wrapper","breakpoints","up","marginLeft","memo","path","withWidth","appBar","boxShadow","shadows","common","white","transition","transitions","create","easing","sharp","duration","leavingScreen","down","appBarToolbar","paddingLeft","paddingRight","drawerPaper","height","whiteSpace","border","overflowX","marginTop","black","smBordered","borderRadius","menuLink","textDecoration","primary","iconListItem","shape","paddingBottom","textPrimary","main","mobileItemSelected","brandText","brandSubText","username","justifyCenter","permanentDrawerListItem","AppBar","position","Toolbar","orientation","flexItem","classNames","isWidthUp","ListItemText","Main","CardChart","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","transactions","statistics","views","profit","posts","targets","messages","isAccountActivated","addBalanceDialogOpen","PureComponent"],"mappings":"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","file":"static/js/4.da82f4de.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport isIsraeliIdValid from 'israeli-id-validator';\n\nconst styles = theme => ({\n  idInput: {\n    marginRight: theme.spacing(2)\n  },\n  ageInput: {\n    marginRight: theme.spacing(2),\n    width: 100\n  }\n});\n\nclass PatientInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gender: this.props.patient.information.gender\n    };\n    this.onAgeChange = this.onAgeChange.bind(this);\n  }\n\n  onAgeChange(event) {\n    let age = Number(event.target.value);\n    this.props.onPatientAgeChange(age);\n  }\n\n  onGenderChange(event) {\n    this.props.onPatientGenderChange(event.target.value);\n    this.setState({gender: event.target.value});\n  }\n\n  isIDValid() {\n    return isIsraeliIdValid(this.props.patient.id);\n  }\n\n  render() {\n  const { classes } = this.props;\n  const Icon = this.props.icon;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={2}>\n      <ListItem>\n        <Icon style={{ color: this.props.color }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Patient\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={10}>\n      <Grid container alignItems={'center'}>\n          <TextField type={'number'} className={classes.idInput}\n                     error={!this.isIDValid()}\n                     label={'ID'}\n                     value={this.props.patient.id}\n                     variant=\"outlined\"\n                     onChange={this.props.onIDChange}\n                     color=\"secondary\"/>\n          <TextField type={'number'} className={classes.ageInput}\n                     label={'Age'}\n                     variant=\"outlined\"\n                     value={Boolean(this.props.patient.information.age) && this.props.patient.information.age}\n                     onChange={this.onAgeChange}\n                     color=\"secondary\"/>\n        <RadioGroup aria-label=\"gender\" value={this.state.gender} style={{display: 'inline'}} onChange={this.onGenderChange.bind(this)}>\n          <Grid container style={{display: 'inline-flex', width: 185}}>\n            <Grid item md={6}>\n              <FormControlLabel value=\"female\" control={<Radio size={'small'} color={'secondary'}/>} label=\"Female\"/>\n            </Grid>\n            <Grid item md={6} >\n              <FormControlLabel value=\"male\" control={<Radio size={'small'} color={'secondary'}/>} label=\"Male\"/>\n            </Grid>\n            <Grid item md={12}>\n              <FormControlLabel\n                style={{visibility: this.state.gender === 'female' ? 'visible' : 'hidden'}}\n                control={\n                  <Checkbox\n                    size={'small'}\n                    checked={this.props.patient.otherConsiderations.pregnent_healthy}\n                    onChange={() => {}}\n                    name=\"checkedB\"\n                    color=\"secondary\"\n                  />}\n                label=\"Pregnant\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              size={'small'}\n              checked={true}\n              onChange={() => {}}\n              name=\"checkedB\"\n              color=\"secondary\"\n            />}\n          label=\"COVID-19 Positive\"\n        />\n      </Grid>\n    </Grid>\n  </Grid>\n  };\n}\n\nPatientInfo.propTypes = {\n  icon: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  patient: PropTypes.object.isRequired,\n  onPatientAgeChange: PropTypes.func.isRequired,\n  onPatientGenderChange: PropTypes.func.isRequired,\n  onIDChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(PatientInfo);\n","import {withStyles} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './MultiColorProgressBar.css';\n\nconst styles = theme => ({\n\n});\n\nclass MultiColorProgressBar extends Component {\n  render() {\n    const parent = this.props;\n\n    let values = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"value\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>{item.value}</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let calibrations = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"graduation\" style={{'color': item.color, 'width': item.percent + '%'}}  key={i}>\n            <span>|</span>\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    let bars = parent.readings && parent.readings.length && parent.readings.map(function(item, i) {\n      if(item.percent > 0) {\n        return (\n          <div className=\"bar\" style={{'backgroundColor': item.color, 'width': item.percent + '%'}}  key={i}>\n\n          </div>\n        )\n      }\n      return null;\n    }, this);\n\n    return (\n      <div className=\"multicolor-bar\">\n        <div className=\"values\">\n          {values === ''?'':values}\n        </div>\n        <div className=\"scale\">\n          {calibrations === ''?'':calibrations}\n        </div>\n        <div className=\"bars\">\n          {bars === ''?'':bars}\n        </div>\n      </div>\n    );\n  }\n}\n\nMultiColorProgressBar.propTypes = {\n  readings: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(MultiColorProgressBar);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport Box from '@material-ui/core/Box';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HotelIcon from '@material-ui/icons/Hotel';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\n\nimport Chip from '@material-ui/core/Chip';\nimport MultiColorProgressBar from './MultiColorProgressBar';\nimport Dashboard from './Dashboard';\n\nconst styles = theme => ({\n  section1: {\n    margin: theme.spacing(3),\n  },\n  section2: {\n    margin: theme.spacing(3)\n  },\n  section3: {\n    margin: theme.spacing(3),\n  },\n  chips: {\n    paddingTop: theme.spacing(1)\n  }\n});\n\nfunction getProgressData(riskScores) {\n  const MAX_VALUE = 20;\n  let makeNice = a => a.toFixed(1).replace(/[.,]00$/, \"\");\n  let toPrecent = (item) => makeNice(((item / MAX_VALUE) * 100));\n\n  let results = [];\n  for (let key in riskScores) {\n    let color = Dashboard.SCORE_CATEGORIES.find(config => config.text === key).color;\n    results.push({name: key, value: makeNice(riskScores[key]), percent: toPrecent(riskScores[key]), color});\n  }\n  let emptyPercentage = 100 - results.map(r => Number(r.percent)).reduce((a,b) => a + b, 0);\n  if (emptyPercentage) {\n    results.push({name: '', value: makeNice(emptyPercentage), percent: emptyPercentage, color: '#fff'});\n  }\n  return results;\n}\n\nfunction Summary(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <MultiColorProgressBar readings={getProgressData(props.riskScores)}/>\n          </Grid>\n          {/*<Grid item>*/}\n          {/*  <OutlinedInput value={props.totalRiskScore.toPrecision(3)}></OutlinedInput>*/}\n          {/*</Grid>*/}\n        </Grid>\n      </div>\n      <Grid container direction={'column'} alignContent={'center'}>\n        <Grid item className={classes.section2} container={true} justify={'center'}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n            <Typography gutterBottom>\n              Recommendation\n            </Typography>\n\n            {(() => {\n              switch (props.recommendation.recommendation) {\n                case 'home':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>;\n                case 'hotel':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>;\n                case 'hospital':\n                  return <Chip size={'medium'} color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>;\n                default:\n                  return ''\n              }\n            })()}\n          </Grid>\n        </Grid>\n        <Grid item className={classes.section3}>\n          <Grid container direction={'column'} alignContent={'center'}>\n            <Grid item container={true} justify={'center'}>\n              <Box mr={1}><ComputerIcon></ComputerIcon></Box>\n              <Typography variant=\"h6\">What is your decision??</Typography>\n            </Grid>\n            <Grid item container={true} justify={'center'}>\n              <Typography variant={'body2'}>Human input will improve the algorithm</Typography>\n            </Grid>\n            <Grid item container={true} justify={'space-evenly'} className={classes.chips}>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HomeIcon />} label={'Home'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<HotelIcon />} label={'Hotel'}/>\n              <Chip variant=\"outlined\" color=\"secondary\" icon={<LocalHospitalIcon />} label={'Hospital'}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Divider/>\n      <Grid container justify={'space-around'}>\n        <Grid item>\n          <Button startIcon={<SaveAltIcon fontSize=\"small\" />} color=\"secondary\">Save</Button>\n        </Grid>\n        <Grid item>\n          <Button startIcon={<CloseIcon fontSize=\"small\" />} color=\"secondary\" onClick={props.onClearAll}>Clear all</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nSummary.propTypes = {\n  theme: PropTypes.object.isRequired,\n  riskScores: PropTypes.object.isRequired,\n  recommendation: PropTypes.object.isRequired,\n  onClearAll: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Summary);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport theme from '../../../theme';\n\nconst styles = theme => ({\n  chipWrapper: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    }\n  }\n});\n\nclass RiskCategory extends Component {\n  render() {\n    const { classes } = this.props;\n    const Icon = this.props.icon;\n    return <Grid container spacing={2} alignItems={'center'}>\n      <Grid item md={2}>\n        <ListItem>\n          <Icon style={{ color: this.props.color }}/>\n          <Box m={1}/>\n          <Typography\n            variant={'body2'}\n            display={'inline'}\n            color=\"primary\">\n            {this.props.categoryName}\n          </Typography>\n        </ListItem>\n      </Grid>\n      <Grid item md={10} className={classes.chipWrapper}>\n          {this.props.items && Object.keys(this.props.items).map((detail, id) => {\n            let isSelected = this.props.items[detail].selected;\n            let isContribution = Boolean(this.props.items[detail].contribution);\n            let color = isSelected ? this.props.color : theme.palette.grey[600];\n            let label = `${this.props.items[detail].text} ${isContribution ? '+'+this.props.items[detail].contribution: ''}`;\n            return <Box key={id} fontWeight={isSelected ? 'bold' : 'normal'}><Chip\n                         style={{backgroundColor: fade(color, 0.2), color: color}}\n                         label={label}\n                         onClick={this.props.onSelectionChange.bind(null, this.props.categoryName, this.props.items[detail].key)}/>\n            </Box>;\n          })}\n      </Grid>\n    </Grid>\n  };\n}\n\nRiskCategory.propTypes = {\n  categoryName: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  icon: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  onSelectionChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(RiskCategory);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Grid, ListItem, Typography, withStyles} from '@material-ui/core';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  input: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nclass Vitals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  vitalChange(event, key) {\n    this.props.onClinicalStatusChange(key, Number(event.target.value));\n  }\n\n  render() {\n  const { classes } = this.props;\n    const Icon = this.props.icon;\n\n  return <Grid container spacing={2} alignItems={'center'}>\n    <Grid item md={2}>\n      <ListItem>\n        <Icon style={{ color: this.props.color }}/>\n        <Box m={1}/>\n        <Typography\n          variant={'body2'}\n          display={'inline'}\n          color=\"primary\">\n          Vitals\n        </Typography>\n      </ListItem>\n    </Grid>\n    <Grid item md={10}>\n      <ListItem disableGutters>\n        {this.props.items.map(vital =>\n          <TextField\n            value={this.props.patient.clinicalStatus[vital.key]}\n            onChange={(e) => this.vitalChange(e, vital.key)}\n            key={vital.key}\n            type={'number'}\n            className={classes.input}\n            label={vital.text}\n            helperText={vital.unit}\n            variant=\"outlined\"\n            color=\"secondary\"/>\n        )}\n      </ListItem>\n    </Grid>\n  </Grid>\n  };\n}\n\nVitals.propTypes = {\n  icon: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  patient: PropTypes.object.isRequired,\n  onClinicalStatusChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Vitals);\n","import axios from 'axios';\n\nclass Api {\n  constructor() {\n    this.baseURL = 'https://cn8pc7plbl.execute-api.eu-west-1.amazonaws.com/staging/';\n    this.config = {\n      headers: {'Content-Type': 'application/json', 'x-api-key': 'inawDBjEa12HYpdIvkUDpaxAcdKA3l4Da7aWcTr7'}\n    }\n  }\n\n  async updateRecommendation(patient) {\n    return axios.post(this.baseURL + 'getPatientModelRecommendation', patient.toServerModel(), this.config).then(a => a.data.recommendation);\n  }\n\n  getPatientScore(recommendation) {\n    return Math.max(0, recommendation.risk_score - Object.values(recommendation.contributing_factors).reduce((a,b) => a+b , 0));\n  }\n}\n\nexport {Api};","import _cloneDeep from 'lodash/cloneDeep';\nimport md5 from 'md5';\n\nclass Patient {\n  constructor() {\n    this.id = '';\n    this.information = {\n      age: 0,\n      gender: 'male'\n    };\n    this.coronaPositive = false;\n    this.medicalPreconditions = {\n      copd: false,\n      htn: false,\n      dm: false,\n      smoker: false,\n      cad: false,\n      chf: false,\n      ckd: false,\n      hd: false,\n      cld: false,\n      dementia: false,\n      cancer: false,\n      aids: false\n    };\n    this.clinicalStatus = {\n      temperature: 0,\n      pulse: 0,\n      respiratory_rate: 0,\n      auscultation: 0,\n      mental_status: 0,\n      oxygen_saturation: 0\n    };\n\n    this.treatMent = {\n      psychiatric_treatment: false,\n      anti_inflamatory_regular_treatment: false,\n      growth_hormone_children: false,\n      immuno_depressant_drugs: false\n    };\n\n    this.otherConsiderations = {\n      mobility_problem: false,\n      potential_for_home_quarentine: false,\n      pregnent_healthy: false,\n      youngs_with_asthma: false\n    }\n  }\n\n  toServerModel() {\n    let patient = _cloneDeep(this);\n    patient.information.age = patient.information.age < 2 ? 2 : patient.information.age;\n    return {\n      patient_id: md5(patient.id),\n      patient_information: this.BoolToNum(patient.information),\n      corona_status: {\n        corona_positive: patient.coronaPositive\n      },\n      medical_preconditions: this.BoolToNum(patient.medicalPreconditions),\n      clinical_status: this.BoolToNum(patient.clinicalStatus),\n      treatment: this.BoolToNum(patient.treatMent),\n      other_considerations: this.BoolToNum(patient.otherConsiderations)\n    };\n  }\n\n  BoolToNum (object) {\n    const returnObject = {}\n    for (const [key, value] of Object.entries(object)) {\n      returnObject[key] = typeof value === 'boolean' ? Number(value) : value;\n    }\n    return returnObject\n  }\n\n}\n\nexport {Patient};","import React, {Component} from 'react';\nimport PatientInfo from \"./PatientInfo\";\nimport {Grid, withStyles} from '@material-ui/core';\nimport Summary from './Summary';\nimport RiskCategory from './RiskCategory';\nimport AirlineSeatFlatAngledOutlinedIcon from '@material-ui/icons/AirlineSeatFlatAngledOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Vitals from './Vitals';\nimport _pick from 'lodash/pick';\nimport {Api} from '../../../api/Api';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport {Patient} from './Patient';\n\nconst styles = theme => ({\n  leftPanel: {\n    borderRight: `2px ${theme.palette.grey[300]} solid`\n  }\n});\n\nconst categoryPadding = 2;\nconst initialState = {\n  patient: new Patient(),\n  medicalSelections: {},\n  otherConsiderationsSelection: {},\n  riskScores: {},\n  recommendation: {}\n};\n\nclass Dashboard extends Component {\n  static STATIC_RISK_CONFIG = {\n    text: \"Patient\",\n    key: \"Patient\",\n    color: \"#8716E0\",\n    icon: AccountCircleOutlinedIcon\n  };\n\n  static MEDICAL_PRECONDITIONS_CONFIG = [\n    {\n      text: \"Pulmonary\",\n      color: \"#00B0BB\",\n      icon: AirlineSeatFlatAngledOutlinedIcon,\n      items: [\n        {\n          key: 'copd',\n          text: 'COPD',\n        },\n        {\n          key: 'smoker',\n          text: 'Smoker',\n        }\n      ]\n    },\n    {\n      text: \"Cardiovalcular\",\n      color: \"#E01683\",\n      icon: FavoriteBorderOutlinedIcon,\n      items: [\n        {\n          key: 'htn',\n          text: 'Hypertension',\n        },\n        {\n          key: 'hd',\n          text: 'Ischemic Heart Disease',\n        },\n        {\n          key: 'chf',\n          text: 'Heart failure'\n        }\n      ]\n    },\n    {\n      text: \"Other Conditions\",\n      color: \"#F08627\",\n      icon: ListAltOutlinedIcon,\n      items: [\n        {\n          key: 'dm',\n          text: 'Diabetes Mellitus',\n        },\n        {\n          key: 'aids',\n          text: 'HIV/AIDS',\n        },\n        {\n          key: 'dementia',\n          text: 'Dementia'\n        },\n        {\n          key: 'cld',\n          text: 'Cirrhosis / Chronic Liver Disease'\n        },\n        {\n          key: 'ckd',\n          text: 'Chronic Kidney Disease'\n        }\n      ]\n    }\n  ];\n\n  static HOME_ENV_CONFIG = {\n    text: \"Home Environment\",\n    color: \"#06B30D\",\n    icon: HomeOutlinedIcon,\n    items: [\n      {\n        key: 'mobility_problem',\n        text: 'Immobile',\n      },\n      {\n        key: 'potential_for_home_quarentine',\n        text: 'Home quarantine is possible',\n      },\n      {\n        key: 'todo missing',\n        text: 'A member of the same household is in a risk group'\n      }\n    ]\n  };\n\n  static VITALS_CONFIG = {\n    text: \"Vitals\",\n    color: \"#8716E0\",\n    icon: ShowChartIcon,\n    items: [\n      {text: 'Temperature', key: 'temperature', unit: 'Celsius'},\n      {text: 'Pulse', key: 'pulse', unit: 'Per minute'},\n      {text: 'Respiratory Rate', key: 'respiratory_rate', unit: 'Per minute'},\n      {text: 'O2 Saturation', key: 'oxygen_saturation', unit: 'ABG'}\n    ]\n  };\n\n  static SCORE_CATEGORIES = [Dashboard.STATIC_RISK_CONFIG].concat(Dashboard.MEDICAL_PRECONDITIONS_CONFIG);\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.patient = new Patient();\n    this.Api = new Api();\n    this.onAgeChange = this.onAgeChange.bind(this);\n    this.onGenderChange = this.onGenderChange.bind(this);\n    this.onIDChange = this.onIDChange.bind(this);\n    this.onMedicalItemChange = this.onMedicalItemChange.bind(this);\n    this.onHomeEnvItemChange = this.onHomeEnvItemChange.bind(this);\n    this.onClinicalStatusChange = this.onClinicalStatusChange.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  reset() {\n    initialState.patient = new Patient();\n    this.setState(initialState);\n    this.prepare();\n  }\n\n  onHomeEnvItemChange(category, categoryItem) {\n    let item = this.state.otherConsiderationsSelection.items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n    this.patient.otherConsiderations[categoryItem] = item.selected;\n    this.setState({otherConsiderationsSelection: this.state.otherConsiderationsSelection});\n    this.setState({patient: this.patient});\n    this.Api.updateRecommendation(this.patient);\n  }\n\n  onMedicalItemChange(category, categoryItem) {\n    let item = this.state.medicalSelections[category].items.find(item => item.key === categoryItem);\n    item.selected = !item.selected;\n    this.patient.medicalPreconditions[categoryItem] = item.selected;\n    this.setState({selections: this.state.medicalSelections});\n    this.setState({patient: this.patient});\n    this.updateMedicalPreconditionsScore(category, item);\n  }\n\n  async updateMedicalPreconditionsScore(category, item) {\n    let categoryKeys = Dashboard.MEDICAL_PRECONDITIONS_CONFIG.find(a => a.text === category).items.map(a => a.key);\n    let riskScores = {...this.state.riskScores};\n    let recommendation = await this.Api.updateRecommendation(this.patient);\n    let categoryFactors = _pick(recommendation.contributing_factors, categoryKeys);\n    item.contribution = categoryFactors[item.key];\n    riskScores[category] = Object.values(categoryFactors).reduce((a, b) => a + b, 0);\n    this.setState({riskScores, recommendation});\n  }\n\n  onAgeChange(age) {\n    this.patient.information.age = age;\n    this.setState({patient: this.patient});\n    const MIN_AGE = 2;\n    const MAX_AGE = 120;\n    if (MIN_AGE <= age && age < MAX_AGE) {\n      this.updatePatientScore();\n    }\n  }\n\n  onGenderChange(gender) {\n    this.patient.information.gender = gender;\n    this.setState({patient: this.patient});\n    this.updatePatientScore();\n  }\n\n  onIDChange(event) {\n    this.patient.id = event.target.value;\n    this.setState({patient: this.patient});\n    this.updatePatientScore();\n  }\n\n  async updatePatientScore() {\n    let riskScores = {...this.state.riskScores};\n    let recommendation = await this.Api.updateRecommendation(this.patient);\n    riskScores.Patient = this.Api.getPatientScore(recommendation);\n    this.setState({riskScores, recommendation});\n  }\n\n  onClinicalStatusChange(key, value) {\n    this.patient.clinicalStatus[key] = value;\n    this.setState({patient: this.patient});\n    this.Api.updateRecommendation(this.patient);\n  }\n\n  prepare() {\n    let medicalSelections = {...this.state.medicalSelections};\n    let otherConsiderationsSelection = {...this.state.otherConsiderationsSelection};\n    // eslint-disable-next-line no-sequences\n    Object.assign(this.state.riskScores, Dashboard.SCORE_CATEGORIES.map(o => o.text).reduce((a,b) => (a[b] = 0, a),{}));\n    Dashboard.MEDICAL_PRECONDITIONS_CONFIG.forEach(category => {\n      medicalSelections[category.text] = category;\n      medicalSelections[category.text].items = medicalSelections[category.text].items.map(item => { return {...item, selected: false, contribution: 0}});\n    });\n\n    otherConsiderationsSelection = Dashboard.HOME_ENV_CONFIG;\n    otherConsiderationsSelection.items = otherConsiderationsSelection.items.map(item => { return {...item, selected: false}});\n    this.setState({medicalSelections, otherConsiderationsSelection});\n  }\n\n  render() {\n    const { classes } = this.props;\n    return <Grid container>\n      <Grid item md={8} className={classes.leftPanel}>\n        <Box py={categoryPadding}>\n          <PatientInfo color={Dashboard.STATIC_RISK_CONFIG.color}\n                       icon={Dashboard.STATIC_RISK_CONFIG.icon}\n                       patient={this.state.patient}\n                       onPatientAgeChange={this.onAgeChange}\n                       onPatientGenderChange={this.onGenderChange}\n                       onIDChange={this.onIDChange}/>\n        </Box>\n        <Divider light/>\n        {Object.keys(this.state.medicalSelections).map(categoryKey =>\n          <div key={categoryKey}>\n            <Box py={categoryPadding}>\n              <RiskCategory onSelectionChange={this.onMedicalItemChange}\n                            items={this.state.medicalSelections[categoryKey].items}\n                            icon={this.state.medicalSelections[categoryKey].icon}\n                            color={this.state.medicalSelections[categoryKey].color}\n                            categoryName={categoryKey}/>\n            </Box>\n            <Divider light/>\n          </div>\n        )}\n        {this.state.otherConsiderationsSelection.items &&\n          <Box py={categoryPadding}>\n            <RiskCategory onSelectionChange={this.onHomeEnvItemChange}\n                          items={this.state.otherConsiderationsSelection.items}\n                          icon={Dashboard.HOME_ENV_CONFIG.icon}\n                          color={Dashboard.HOME_ENV_CONFIG.color}\n                          categoryName={Dashboard.HOME_ENV_CONFIG.text}/>\n          </Box>\n        }\n        <Divider light/>\n        <Box py={categoryPadding}>\n          <Vitals color={Dashboard.VITALS_CONFIG.color}\n                  icon={Dashboard.VITALS_CONFIG.icon}\n                  items={Dashboard.VITALS_CONFIG.items}\n                  patient={this.state.patient}\n                  onClinicalStatusChange={this.onClinicalStatusChange}/>\n        </Box>\n      </Grid>\n      <Grid item md={4}>\n        <Summary riskScores={this.state.riskScores} recommendation={this.state.recommendation} onClearAll={this.reset}/>\n      </Grid>\n    </Grid>\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Dashboard);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { memo } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  }\n});\n\nfunction Routing(props) {\n  const {\n    classes\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React, { Fragment} from \"react\";\nimport classNames from \"classnames\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  ListItem,\n  ListItemText,\n  Box,\n  withStyles,\n  isWidthUp,\n  withWidth\n} from \"@material-ui/core\";\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0\n    }\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    },\n    backgroundColor: theme.palette.common.black\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\"\n    }\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  textPrimary: {\n    color: theme.palette.primary.main\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  brandText: {\n    marginRight: theme.spacing(1),\n  },\n  brandSubText: {\n    marginLeft: theme.spacing(1),\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2)\n  },\n  justifyCenter: {\n    justifyContent: \"center\"\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n});\n\nfunction NavBar(props) {\n  const { classes, width } = props;\n\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <ListItem display=\"flex\" alignItems=\"center\">\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\">\n                HOSP\n              </Typography>\n              <Divider orientation=\"vertical\" flexItem></Divider>\n              <Typography\n                variant=\"subtitle1\"\n                className={classes.brandSubText}\n                display=\"block\"\n                color=\"secondary\">\n                Decision Support Tool\n              </Typography>\n          </ListItem>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              {isWidthUp(\"sm\", width) && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">Dr. Liat Ezra</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </Fragment>\n  );\n}\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\n\nconst styles = theme => ({\n  main: {\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0\n    }\n  }\n});\n\n\nclass Main extends PureComponent {\n  state = {\n    CardChart: null,\n    EmojiTextArea: null,\n    ImageCropper: null,\n    Dropzone: null,\n    DateTimePicker: null,\n    transactions: [],\n    statistics: { views: [], profit: [] },\n    posts: [],\n    targets: [],\n    messages: [],\n    isAccountActivated: false,\n    addBalanceDialogOpen: false\n  };\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <NavBar/>\n        <main className={classNames(classes.main)}>\n          <Routing/>\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);\n"],"sourceRoot":""}