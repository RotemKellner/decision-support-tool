{"version":3,"sources":["GlobalStyles.js","serviceWorker.js","App.js","aws-exports.js","index.js","theme.js"],"names":["withStyles","theme","outline","color","palette","common","white","paddingTop","spacing","paddingBottom","paddingLeft","breakpoints","down","width","paddingRight","marginRight","marginLeft","up","maxWidth","display","flexWrap","marginTop","marginBottom","withTheme","Boolean","window","location","hostname","match","Amplify","configure","Auth","identityPoolId","region","userPoolId","userPoolWebClientId","API","endpoints","name","endpoint","LoggedInComponent","lazy","ReactGA","initialize","pageview","pathname","search","navigator","serviceWorker","ready","then","registration","unregister","withAuthenticator","CssBaseline","GlobalStyles","fallback","path","ReactDOM","render","document","getElementById","borderColor","createMuiTheme","primary","main","secondary","black","darkBlack","warning","light","dark","tonalOffset","background","default","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","MuiTooltip","tooltip","MuiExpansionPanelDetails","typography","useNextVariants","responsiveFontSizes"],"mappings":"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","file":"static/js/main.0fa229f7.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === \"[::1]\" ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport '@aws-amplify/ui/dist/style.css';\n\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ReactGA from 'react-ga';\nimport { withAuthenticator } from 'aws-amplify-react';\n\nAmplify.configure(awsconfig);\n\nconst LoggedInComponent = lazy(() => import(\"./logged_in/components/Main\"));\n\nconst trackingId = 'UA-163803019-1';\nReactGA.initialize(trackingId);\nReactGA.pageview(window.location.pathname + window.location.search);\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <GlobalStyles />\n        <Suspense fallback={<Fragment />}>\n          <Switch>\n            <Route path=\"/\">\n              <LoggedInComponent />\n            </Route>\n          </Switch>\n        </Suspense>\n      </MuiThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nserviceWorker.unregister();\n\nexport default withAuthenticator(App);\n","export default {\n    Auth: {\n        // REQUIRED - Amazon Cognito Identity Pool ID\n        identityPoolId: 'eu-west-1:075700a6-8cec-440e-bd9b-b20d884b62ac',\n        // REQUIRED - Amazon Cognito Region\n        region: 'eu-west-1',\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: 'eu-west-1_fJOemFGe1',\n        // OPTIONAL - Amazon Cognito Web Client ID\n        userPoolWebClientId: 'r28sckqn3ukf4m1td6v7oim9s',\n    },\n    API: {\n        endpoints: [\n            {\n                name: 'getPatientModelRecommendation',\n                endpoint: \"https://cn8pc7plbl.execute-api.eu-west-1.amazonaws.com/staging-auth\"\n            },\n            {\n                name: 'getRecordsByPatient',\n                endpoint: \"https://cn8pc7plbl.execute-api.eu-west-1.amazonaws.com/staging-auth\"\n            }\n        ]\n    }\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\n\n// colors\nconst primary = \"#000\";\nconst secondary = \"#125FC6\";\nconst black = \"#343a40\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#fff\";\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: primary },\n    secondary: { main: secondary },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nexport default responsiveFontSizes(theme);\n"],"sourceRoot":""}